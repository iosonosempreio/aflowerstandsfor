{"version":3,"sources":["Test/Test.js","Utilities/Utilities.js","PixiViz/PixiViz.js","App.js","serviceWorker.js","index.js"],"names":["node","projection","Utilities","size","minScale","maxScale","width","height","scale","simulation","d3","stop","emoji","clampZoomOptions","nodes","categories","JSON","parse","stringify","Test","props","state","data","componentNode","this","_rootNode","fitSize","map","translate","center","then","csv","dataByDates","key","d","entries","console","log","forEach","date","this_date","raw_data","values","r","point","long","lat","x","y","region","i","c","ii","obj","denominazione_regione","push","setState","svg","g","append","zoom","extent","window","innerWidth","innerHeight","scaleExtent","on","attr","transform","call","selectAll","tick","document","title","alpha","force","_x","_y","strength","alphaDecay","alphaMin","dates","Object","keys","runAllDates","shift","data_to_use","addNodes","updateForceLayout","length","restart","n","index","vx","vy","fx","fy","downloadSpatializedData","addEventListener","e","keyCode","ref","_setRef","bind","style","Component","category","newNodes","filter","a","Math","sqrt","PI","cos","sin","concat","id","exit","remove","enter","classed","text","emoji_dictionary","dragstarted","dragged","dragended","merge","active","alphaTarget","blob","Blob","type","FileSaver","saveAs","pixiApp","viewport","container","emojiCounter","dpr","devicePixelRatio","PixiViz","loadData","loadEmoji","initPixiApp","textures","Promise","all","files","mapData","PIXI","backgroundColor","resolution","autoResize","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","clampZoom","drag","pressDrag","clampWheel","pinch","wheel","stage","addChild","features","this_graphics","path","context","beginFill","lineStyle","endFill","sprite","from","anchor","set","emoji_images_dictionary","icons","querySelectorAll","html2canvas","canvas","toDataURL","position","top","src","onLoad","App","className","basename","exact","to","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47848244.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport FileSaver from 'file-saver';\n\nimport Utilities from '../Utilities/Utilities';\n\nconst data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst simulation = d3.forceSimulation().stop();\nconst size = Utilities.emoji.size/Utilities.clampZoomOptions.maxScale;\n\nlet nodes = [], categories = JSON.parse(JSON.stringify(Utilities.categories)),\n    node,\n    projection;\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n\n    projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(Utilities.map.scale)\n        .center([12.368775000000001, 42.9451139]);\n  }\n  componentDidMount() {\n\n    d3.csv(data_url).then(csv=>{\n\n      // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia'||d.denominazione_regione===\"Piemonte\"||d.denominazione_regione===\"Emilia Romagna\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lazio'||d.denominazione_regione===\"Abruzzo\"||d.denominazione_regione===\"Umbria\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n      // csv = csv.filter(d=>d.denominazione_regione==='Piemonte')\n\n      const dataByDates = d3.nest()\n        .key(d=>d.data)\n        .entries(csv);\n\n      console.log(dataByDates);\n      \n      const data = {};\n\n      // generating data\n      dataByDates.forEach(date=>{\n\n        const this_date = date.key\n        const raw_data = date.values;\n        raw_data.forEach(r=>{\n          const point = projection([r.long,r.lat]);\n          r.x = point[0];\n          r.y = point[1];\n        })\n\n        data[this_date] = [];\n\n        raw_data.forEach((region,i)=>{\n          Utilities.categories.forEach((c)=>{\n            for (let ii=0; ii<region[c]; ++ii){\n              const obj={\n                'id': region.denominazione_regione + '-' + c + '-' + ii+1,\n                'category': c,\n                'denominazione_regione': region.denominazione_regione,\n                'date': region.data,\n                '_x': region.x,\n                '_y': region.y,\n                'x': region.x,\n                'y': region.y\n              }\n              data[this_date].push(obj);\n            }\n          })\n        })\n\n      })\n      \n      this.setState({data:data}, ()=>{\n\n        const svg = d3.select(this._rootNode);\n        const g = svg.append('g');\n        \n        function zoomed() {\n          g.attr(\"transform\", d3.event.transform);\n        }\n  \n        const zoom = d3.zoom()\n          .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n          .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale*2])\n          .on(\"zoom\", zoomed);\n        \n        svg.call(zoom);\n        svg.call(zoom.transform, d3.zoomIdentity\n            .translate(-5, -340)\n            .scale(5)\n          );\n        \n        node = g.selectAll('text')\n        simulation.nodes(nodes)\n          .tick(1000)\n          .on(\"tick\", ()=>{\n            document.title = simulation.alpha();\n            node.attr('x',d=>d.x).attr('y',d=>d.y);\n          })\n          .force(\"x\", d3.forceX(d=>d._x))\n          .force(\"y\", d3.forceY(d=>d._y))\n          .force(\"charge\", d3.forceManyBody().strength(-0.05))\n          .alphaDecay(0.01)\n          .alphaMin(0.1)\n\n          let dates = Object.keys(this.state.data);\n          \n          const runAllDates = ()=>{\n            let date = dates.shift();\n            console.log(date);\n            let data_to_use = this.state.data[date];\n            console.log(data_to_use);\n\n            categories = JSON.parse(JSON.stringify(Utilities.categories));\n            nodes = addNodes(nodes, data_to_use, categories.shift());\n            updateForceLayout();\n\n            simulation.force(\"collision\", null)\n\n            simulation.on(\"end\", () => {\n              document.title = 'simulation ended';\n              if (categories.length>0) {\n                nodes = addNodes(nodes, data_to_use, categories.shift());\n                updateForceLayout();\n              } else {\n                document.title = 'running anticollision';\n                console.log('running anticollision');\n\n                simulation.force(\"collision\",\n                  d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n                    .strength(0.1)\n                );\n\n                simulation\n                  .alpha(1)\n                  .restart()\n                  .on('end',()=>{\n                    console.log('done anticollision, missing', dates.length)\n                    if (dates.length>0) {\n                      nodes.forEach(n=>{\n                        delete n.x;\n                        delete n.y;\n                        delete n.index;\n                        delete n.vx;\n                        delete n.vy;\n                        delete n.fx;\n                        delete n.fy;\n                      })\n                      nodes = [];\n                      runAllDates();\n                    } else {\n                      downloadSpatializedData(this.state.data)\n                    }\n                  });\n              }\n            })\n          }\n          runAllDates();\n      })\n    })\n\n    document.addEventListener('keypress', (e)=>{\n      if (e.key==='r'){\n        simulation.alpha(1).restart();\n      } else if (e.key==='\\\\'){\n        simulation.alpha(0.00001).restart();\n      } else if (e.key==='c' || e.keyCode===99){\n        nodes.forEach(n=>{\n          n.fx=null;\n          n.fy=null\n        })\n        simulation.force(\"collision\",\n          d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n            .strength(0.1)\n        );\n        simulation\n          .alpha(1)\n          .restart();\n\n      } else if (e.key==='d') {\n        downloadSpatializedData(nodes);\n      }\n    })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'100%', height:'100%'}}></svg>;\n  }\n}\n\nexport default Test;\n\nconst addNodes = (nodes, data, category)=>{\n  nodes.forEach(n=>{\n    n.fx=n.x;\n    n.fy=n.y\n  })\n  const newNodes = data.filter(d=>d.category===category);\n  const a = 360/newNodes.length * 20;\n  const r = Math.sqrt((newNodes.length+nodes.length)/Math.PI)*2;\n  newNodes.forEach((d,i)=>{\n    d.x=d._x + Math.cos(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n    d.y=d._y + Math.sin(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n  })\n  return nodes.concat(newNodes);\n}\n\nconst updateForceLayout = () => {\n  node = node.data(nodes, d=>d.id)\n  node.exit().remove();\n\n  node = node.enter().append('text')\n    .classed('node', true)\n    .attr('font-size',size+'px')\n    .text(d=>Utilities.emoji_dictionary[d.category])\n    .attr('x',d=>d.x)\n    .attr('y',d=>d.y)\n    .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended))\n    .merge(node);\n\n  simulation.nodes(nodes)\n    .alpha(1)\n    .restart();\n}\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\nfunction downloadSpatializedData(data) {\n  for (let i=0; i<data.length; ++i){\n    data[i]._x = data[i].x;\n    data[i]._y = data[i].y;\n    delete data[i].index;\n    delete data[i].vx;\n    delete data[i].vy;\n    delete data[i].x;\n    delete data[i].y;\n  }\n  var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n  FileSaver.saveAs(blob, \"covi-z-storico.json\");\n}\n\n// spatialization()\n// function spatialization() {\n//   if (simulationIsRunning) {\n//     document.title = 'a = ' + simulation.alpha();\n//     // node\n//     //   .attr('x',d=>d.x)\n//     //   .attr('y',d=>d.y);\n//     requestAnimationFrame(spatialization)\n//   }\n// }\n\n// node = node.data(nodes, (d,i)=>'node-'+i).enter().append('text').merge(node)\n//   .attr('font-size',size+'px')\n//   .text(d=>Utilities.emoji_dictionary[d.category])\n//   .attr('x',d=>d.x)\n//   .attr('y',d=>d.y);\n\n// for (let i=0; i<data.length; ++i){\n//   data[i]._x = data[i].x;\n//   data[i]._y = data[i].y;\n//   delete data[i].index;\n//   delete data[i].vx;\n//   delete data[i].vy;\n//   delete data[i].x;\n//   delete data[i].y;\n// }\n// var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"covi-z.json\");","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.5,\n    maxScale:15\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '⚪️',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌺'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\nUtilities.categories = [\n    \"deceduti\",\n    \"terapia_intensiva\",\n    \"ricoverati_con_sintomi\",\n    \"isolamento_domiciliare\",\n    \"dimessi_guariti\",\n    // \"totale_ospedalizzati\",\n    // \"totale_attualmente_positivi\",\n    // \"nuovi_attualmente_positivi\",\n    // \"tamponi\"\n  ]\n\nUtilities.map = {\n    width: 768,\n    height:1024,\n    scale:8000\n}\n\nexport default Utilities;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\nimport html2canvas from 'html2canvas';\n\nimport Utilities from '../Utilities/Utilities';\n\nlet pixiApp, viewport, container, graphics, emojiCounter = 0,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    dpr = window.devicePixelRatio || 1,\n    size = Utilities.emoji.size,\n    projection;\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.loadData = this.loadData.bind(this);\n    this.loadEmoji = this.loadEmoji.bind(this);\n    this.initPixiApp = this.initPixiApp.bind(this);\n\n    this.state = {\n      textures: {}\n    }\n  }\n  loadData(){\n    return Promise.all([\n      d3.json('./data/covi-z.json'),\n      d3.json('./data/regioni.geojson'),\n    ])\n  }\n  initPixiApp() {\n    this.loadData().then( files => {\n      let data = files[0];\n      let mapData = files[1];\n  \n      pixiApp = new PIXI.Application({\n        width: width,\n        height: height,\n        backgroundColor: 0xfafafa,\n        resolution: dpr,\n        autoResize: true\n      });\n      this._rootNode.appendChild(pixiApp.view);\n  \n      // create viewport and add it to the stage\n      viewport = new Viewport({\n        center: new PIXI.Point(-window.innerWidth/2, -window.innerHeight/2),\n        passiveWheel: false,\n        stopPropagation: true,\n        divWheel: this._rootNode,\n        screenWidth: window.innerWidth,\n        screenHeight: window.innerHeight,\n        worldWidth: window.innerWidth,\n        worldHeight: window.innerHeight,\n        interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n      });\n      viewport\n        // .moveCenter(window.innerWidth/2,window.innerHeight/2)\n        .clampZoom(Utilities.clampZoomOptions)\n        .drag({pressDrag:true, clampWheel:true})\n        .pinch()\n        .wheel()\n      pixiApp.stage.addChild(viewport);\n      \n      // Draw Italy\n      // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n      projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(Utilities.map.scale)\n        .center([12.368775000000001, 42.9451139]);\n  \n  \n      for (let i=0; i<mapData.features.length; i++) {\n        const region = mapData.features[i];\n  \n        const this_graphics = new PIXI.Graphics();\n  \n        const path = d3.geoPath()\n          .projection(projection)\n          .context(this_graphics);\n  \n        this_graphics.beginFill(0xffffff, 1);\n        this_graphics.lineStyle(0.25, 0xcccccc);\n          path(region);\n        this_graphics.endFill();\n  \n        viewport.addChild(this_graphics);\n      }\n  \n      // Sprites for emoji\n      container = new PIXI.Container();\n      viewport.addChild(container);\n  \n      for (let i=0; i<data.length; ++i) {\n        // create a new Sprite from an image path\n        const sprite = PIXI.Sprite.from(this.state.textures[data[i].category]);\n        // center the sprite's anchor point\n        sprite.anchor.set(0.5);\n        // move the sprite to the center of the screen\n        sprite.x = data[i]._x;\n        sprite.y = data[i]._y;\n        sprite.scale.x = 1/dpr/Utilities.clampZoomOptions.maxScale;\n        sprite.scale.y = 1/dpr/Utilities.clampZoomOptions.maxScale;\n  \n        container.addChild(sprite);\n      }\n    });\n  }\n  componentDidMount() {\n    \n  }\n  loadEmoji(){\n    emojiCounter++;\n    if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n      const icons = document.querySelectorAll('#textures-generation>*');\n      const textures = {};\n      for (let i=0; i<icons.length; ++i) {\n        html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n          textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n          if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n            this.setState({textures:textures},()=>{\n              this.initPixiApp();\n            })\n          }\n        });\n      }\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  render() {\n    return <div style={{width:'100%',height:'100%'}} ref={this._setRef.bind(this)}>\n      {true && \n        <div id=\"textures-generation\" style={{position:'absolute', top:'10px'}}>\n          { Object.keys(Utilities.emoji_images_dictionary).map(d=>{\n            return <img id={d} key={`emoji-${d}`} style={{width:size+'px'}} src={`./${d}.png`} onLoad={this.loadEmoji} />\n          }) }\n        </div>\n      }\n    </div>;\n  }\n}\n\nexport default PixiViz;","import React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/svg\">SVG Version</Link>\n                </li>\n                <li>\n                  <Link to=\"/pixi\">PIXIjs version</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}