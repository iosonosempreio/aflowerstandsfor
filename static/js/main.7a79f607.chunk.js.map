{"version":3,"sources":["Test/Test.js","PixiViz/PixiViz.js","Utilities/Utilities.js","App.js","serviceWorker.js","index.js"],"names":["projection","pixiApp","viewport","container","Utilities","size","minScale","maxScale","width","height","simulation","d3","stop","emoji","clampZoomOptions","Test","props","state","data","componentNode","this","_rootNode","then","csv","byDates","key","d","entries","raw_data","length","values","fitSize","map","translate","scale","center","forEach","r","point","long","lat","x","y","i","categories","c","ii","obj","denominazione_regione","find","dd","push","setState","svg","g","append","call","extent","window","innerWidth","innerHeight","scaleExtent","on","attr","transform","nodes","selectAll","enter","text","emoji_dictionary","category","alphaDecay","prompt","force","_x","_y","strength","alpha","console","log","simulationIsRunning","index","vx","vy","blob","Blob","JSON","stringify","type","FileSaver","saveAs","restart","spatialization","document","title","requestAnimationFrame","addEventListener","event","a","ref","_setRef","bind","style","Component","emojiCounter","dpr","devicePixelRatio","PixiViz","loadData","loadEmoji","initPixiApp","textures","Promise","all","files","mapData","PIXI","backgroundColor","resolution","autoResize","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","clampZoom","drag","pressDrag","clampWheel","pinch","wheel","stage","addChild","features","region","this_graphics","path","context","beginFill","lineStyle","endFill","sprite","from","anchor","set","Object","keys","emoji_images_dictionary","icons","querySelectorAll","html2canvas","canvas","id","toDataURL","position","top","src","onLoad","App","className","basename","exact","to","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a79f607.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport FileSaver from 'file-saver';\n\nimport Utilities from '../Utilities/Utilities';\n\nconst data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst simulation = d3.forceSimulation().stop();\n\nconst size = Utilities.emoji.size/Utilities.clampZoomOptions.maxScale;\n\nlet projection;\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  componentDidMount() {\n    d3.csv(data_url).then(csv=>{\n\n      // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n      // csv = csv.filter(d=>d.denominazione_regione==='Lazio')\n\n      const byDates = d3.nest()\n        .key(d=>d.data)\n        .entries(csv);\n      \n      const raw_data = byDates[byDates.length-1].values;\n      const data = [];\n\n      projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(3000)\n        .center([12.368775000000001, 42.9451139]);\n\n      raw_data.forEach(r=>{\n        const point = projection([r.long,r.lat]);\n        r.x = point[0];\n        r.y = point[1];\n      })\n\n      for(let i=0; i<raw_data.length; ++i) {\n        Utilities.categories.forEach(c=>{\n          for (let ii=0; ii<raw_data[i][c]; ++ii){\n            const obj={\n              'category': c,\n              'denominazione_regione': raw_data[i].denominazione_regione,\n              'date': raw_data[i].data,\n              '_x': raw_data.find(dd=>dd.denominazione_regione===raw_data[i].denominazione_regione).x,\n              '_y': raw_data.find(dd=>dd.denominazione_regione===raw_data[i].denominazione_regione).y,\n              'x': raw_data.find(dd=>dd.denominazione_regione===raw_data[i].denominazione_regione).x + d3.randomUniform(-50,50)(),\n              'y': raw_data.find(dd=>dd.denominazione_regione===raw_data[i].denominazione_regione).y + d3.randomUniform(-50,50)()\n            }\n            data.push(obj);\n          }\n        })\n      }\n      this.setState({raw_data:raw_data, data:data}, ()=>{\n\n        const svg = d3.select(this._rootNode);\n        const g = svg.append('g');\n          \n        svg.call(d3.zoom()\n          .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n          .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale])\n          .on(\"zoom\", zoomed));\n\n        function zoomed() {\n          g.attr(\"transform\", d3.event.transform);\n        }\n\n        let nodes = g.selectAll('text').data(this.state.data).enter().append('text')\n          .attr('font-size',size+'px')\n          .text(d=>Utilities.emoji_dictionary[d.category]);\n\n        const alphaDecay = window.prompt('Set the alpha decay of force simulation, once finished it will generate a JSON with the spatialized positions', 0.05);\n\n        simulation.nodes(data)\n          // .on(\"tick\", ()=>{\n          //   nodes\n          //     .attr('x',d=>d.x)\n          //     .attr('y',d=>d.y);\n          //   document.title = simulation.alpha();\n          // })\n          .force(\"x\", d3.forceX(d=>d._x))\n          .force(\"y\", d3.forceY(d=>d._y))\n          .force(\"charge\", d3.forceManyBody().strength(-0.05))\n          .alphaDecay(alphaDecay)\n          .alpha(1)\n          .on(\"end\", () => {\n            console.log('ended',data, simulation);\n            simulationIsRunning = false;\n\n            nodes\n              .attr('x',d=>d.x)\n              .attr('y',d=>d.y);\n\n            for (let i=0; i<data.length; ++i){\n              console.log(i);\n              data[i]._x = data[i].x;\n              data[i]._y = data[i].y;\n              delete data[i].index;\n              delete data[i].vx;\n              delete data[i].vy;\n              delete data[i].x;\n              delete data[i].y;\n            }\n            var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n            FileSaver.saveAs(blob, \"covi-z.json\");\n\n          })\n          .restart();\n        \n        let simulationIsRunning = true;\n\n        spatialization()\n        function spatialization() {\n          if (simulationIsRunning) {\n            document.title = 'a = ' + simulation.alpha();\n            nodes\n              .attr('x',d=>d.x)\n              .attr('y',d=>d.y);\n            requestAnimationFrame(spatialization)\n          }\n        }\n\n        document.addEventListener(\"keypress\", async function(event){\n          if (event.key==='r') {\n            simulation.alpha(1).restart();\n          }\n        });\n      })\n    })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'100%', height:'100%'}}></svg>;\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\nimport html2canvas from 'html2canvas';\n\nimport Utilities from '../Utilities/Utilities';\n\nlet pixiApp, viewport, container, graphics, emojiCounter = 0,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    dpr = window.devicePixelRatio || 1,\n    size = Utilities.emoji.size,\n    projection;\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.loadData = this.loadData.bind(this);\n    this.loadEmoji = this.loadEmoji.bind(this);\n    this.initPixiApp = this.initPixiApp.bind(this);\n\n    this.state = {\n      textures: {}\n    }\n  }\n  loadData(){\n    return Promise.all([\n      d3.json('./data/covi-z.json'),\n      d3.json('./data/regioni.geojson'),\n    ])\n  }\n  initPixiApp() {\n    this.loadData().then( files => {\n      let data = files[0];\n      let mapData = files[1];\n  \n      pixiApp = new PIXI.Application({\n        width: width,\n        height: height,\n        backgroundColor: 0xfafafa,\n        resolution: dpr,\n        autoResize: true\n      });\n      this._rootNode.appendChild(pixiApp.view);\n  \n      // create viewport and add it to the stage\n      viewport = new Viewport({\n        center: new PIXI.Point(-window.innerWidth/2, -window.innerHeight/2),\n        passiveWheel: false,\n        stopPropagation: true,\n        divWheel: this._rootNode,\n        screenWidth: window.innerWidth,\n        screenHeight: window.innerHeight,\n        worldWidth: window.innerWidth,\n        worldHeight: window.innerHeight,\n        interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n      });\n      viewport\n        // .moveCenter(window.innerWidth/2,window.innerHeight/2)\n        .clampZoom(Utilities.clampZoomOptions)\n        .drag({pressDrag:true, clampWheel:true})\n        .pinch()\n        .wheel()\n      pixiApp.stage.addChild(viewport);\n      \n      // Draw Italy\n      // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n      projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(3000)\n        .center([12.368775000000001, 42.9451139]);\n  \n  \n      for (let i=0; i<mapData.features.length; i++) {\n        const region = mapData.features[i];\n  \n        const this_graphics = new PIXI.Graphics();\n  \n        const path = d3.geoPath()\n          .projection(projection)\n          .context(this_graphics);\n  \n        this_graphics.beginFill(0xffffff, 1);\n        this_graphics.lineStyle(0.25, 0xcccccc);\n          path(region);\n        this_graphics.endFill();\n  \n        viewport.addChild(this_graphics);\n      }\n  \n      // Sprites for emoji\n      container = new PIXI.Container();\n      viewport.addChild(container);\n  \n      for (let i=0; i<data.length; ++i) {\n        // create a new Sprite from an image path\n        const sprite = PIXI.Sprite.from(this.state.textures[data[i].category]);\n        // center the sprite's anchor point\n        sprite.anchor.set(0.5);\n        // move the sprite to the center of the screen\n        sprite.x = data[i]._x;\n        sprite.y = data[i]._y;\n        sprite.scale.x = 1/dpr/Utilities.clampZoomOptions.maxScale;\n        sprite.scale.y = 1/dpr/Utilities.clampZoomOptions.maxScale;\n  \n        container.addChild(sprite);\n      }\n    });\n  }\n  componentDidMount() {\n    \n  }\n  loadEmoji(){\n    emojiCounter++;\n    if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n      const icons = document.querySelectorAll('#textures-generation>*');\n      const textures = {};\n      for (let i=0; i<icons.length; ++i) {\n        html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n          textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n          if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n            this.setState({textures:textures},()=>{\n              this.initPixiApp();\n            })\n          }\n        });\n      }\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  render() {\n    return <div style={{width:'100%',height:'100%'}} ref={this._setRef.bind(this)}>\n      {true && \n        <div id=\"textures-generation\" style={{position:'absolute', top:'10px'}}>\n          { Object.keys(Utilities.emoji_images_dictionary).map(d=>{\n            return <img id={d} key={`emoji-${d}`} style={{width:size+'px'}} src={`./${d}.png`} onLoad={this.loadEmoji} />\n          }) }\n        </div>\n      }\n    </div>;\n  }\n}\n\nexport default PixiViz;","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.5,\n    maxScale:10\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '🏠',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌷'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\nUtilities.categories = [\n    \"ricoverati_con_sintomi\",\n    \"terapia_intensiva\",\n    // \"totale_ospedalizzati\",\n    \"isolamento_domiciliare\",\n    // \"totale_attualmente_positivi\",\n    // \"nuovi_attualmente_positivi\",\n    \"dimessi_guariti\",\n    \"deceduti\",\n    // \"tamponi\"\n  ]\n\nUtilities.map = {\n    width: 768,\n    height:1024\n}\n\nexport default Utilities;\n","import React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/svg\">SVG Version</Link>\n                </li>\n                <li>\n                  <Link to=\"/pixi\">PIXIjs version</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n        <Route path=\"*\">\n            <h1>404</h1>\n          </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}