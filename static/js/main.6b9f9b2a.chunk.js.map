{"version":3,"sources":["Test/Test.js","Utilities/Utilities.js","PixiViz/PixiViz.js","VizView/VizView.js","PIXIPerformancesTest/PIXIPerformancesTest.js","App.js","serviceWorker.js","index.js"],"names":["node","projection","Utilities","size","minScale","maxScale","width","height","scale","t","simulation","d3","stop","emoji","clampZoomOptions","nodes","categories","JSON","parse","stringify","Test","props","state","data","componentNode","this","_rootNode","fitSize","map","translate","center","then","csv","dataByDates","key","d","entries","console","log","forEach","date","this_date","raw_data","values","r","point","long","lat","x","y","region","i","c","ii","obj","denominazione_regione","push","setState","svg","g","append","zoom","extent","window","innerWidth","innerHeight","scaleExtent","on","attr","transform","call","selectAll","tick","document","title","alpha","force","_x","_y","strength","alphaDecay","alphaMin","dates","Object","keys","slice","runAllDates","shift","data_to_use","addNodes","updateForceLayout","length","restart","n","index","vx","vy","fx","fy","downloadSpatializedData","addEventListener","e","keyCode","ref","_setRef","bind","style","Component","category","newNodes","filter","a","Math","sqrt","PI","cos","sin","concat","id","exit","remove","enter","classed","text","emoji_dictionary","dragstarted","dragged","dragended","merge","active","alphaTarget","blob","Blob","type","FileSaver","saveAs","pixiApp","viewport","container","textures","flowers","dpr","devicePixelRatio","PixiViz","updateSprites","repositionSprites","to_remove","current_x","_data_","current_y","sprite","PIXI","from","anchor","set","addChild","removeChild","children","warn","simulation_is_running","model","margin","snap","topLeft","interrupt","removeOnComplete","removeOnInterrupt","snapZoom","renderable","play","changeDate","current_date_index","reposition","requestAnimationFrame","getBoundingClientRect","backgroundColor","resolution","autoResize","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","clampZoom","drag","pressDrag","clampWheel","pinch","wheel","stage","mapGeometries","features","this_graphics","path","context","beginFill","lineStyle","endFill","loader","add","onProgress","progress","onComplete","baseTexture","resources","sprites","texture","texture_name","flowers_textures_info","frames","frame","w","h","replace","load","prevProps","VizView","newDate","current_date","data_day","newModel","Promise","all","fetched","file_name","dailyDatasets","elm","Number","origin_x","origin_y","name","value","onClick","changeModel","reverse","PIXIPerformancesTest","shared","app","autoStart","powerPreference","sharedTicker","vertices","position","rotation","uvs","tint","index_texture","speedX","random","speedY","counter","update","render","App","className","basename","exact","to","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b9f9b2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport FileSaver from 'file-saver';\n\nimport Utilities from '../Utilities/Utilities';\n\nconst data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst simulation = d3.forceSimulation().stop();\nconst size = Utilities.emoji.size/Utilities.clampZoomOptions.maxScale;\n\nlet nodes = [], categories = JSON.parse(JSON.stringify(Utilities.categories)),\n    node,\n    projection;\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n\n    projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(Utilities.map.scale)\n        .center([12.368775000000001, 42.9451139]);\n  }\n  componentDidMount() {\n\n    d3.csv(data_url).then(csv=>{\n\n      // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia'||d.denominazione_regione===\"Piemonte\"||d.denominazione_regione===\"Emilia Romagna\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lazio'||d.denominazione_regione===\"Abruzzo\"||d.denominazione_regione===\"Umbria\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n      // csv = csv.filter(d=>d.denominazione_regione==='Piemonte')\n\n      const dataByDates = d3.nest()\n        .key(d=>d.data)\n        .entries(csv);\n\n      console.log(dataByDates);\n      \n      const data = {};\n\n      // generating data\n      dataByDates.forEach(date=>{\n\n        const this_date = date.key\n        const raw_data = date.values;\n        raw_data.forEach(r=>{\n          const point = projection([r.long,r.lat]);\n          r.x = point[0];\n          r.y = point[1];\n        })\n\n        data[this_date] = [];\n\n        raw_data.forEach((region,i)=>{\n          Utilities.categories.forEach((c)=>{\n            for (let ii=0; ii<region[c]; ++ii){\n              const obj={\n                'id': region.denominazione_regione + '-' + c + '-' + ii+1,\n                'category': c,\n                'denominazione_regione': region.denominazione_regione,\n                'date': region.data,\n                '_x': region.x,\n                '_y': region.y,\n                'x': region.x,\n                'y': region.y\n              }\n              data[this_date].push(obj);\n            }\n          })\n        })\n\n      })\n      \n      this.setState({data:data}, ()=>{\n\n        const svg = d3.select(this._rootNode);\n        const g = svg.append('g');\n        \n        function zoomed() {\n          g.attr(\"transform\", d3.event.transform);\n        }\n  \n        const zoom = d3.zoom()\n          .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n          .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale*2])\n          .on(\"zoom\", zoomed);\n        \n        svg.call(zoom);\n        svg.call(zoom.transform, d3.zoomIdentity\n            .translate(-5, -340)\n            .scale(5)\n          );\n        \n        node = g.selectAll('text')\n        simulation.nodes(nodes)\n          .tick(1000)\n          .on(\"tick\", ()=>{\n            document.title = simulation.alpha();\n            node.attr('x',d=>d.x).attr('y',d=>d.y);\n          })\n          .force(\"x\", d3.forceX(d=>d._x))\n          .force(\"y\", d3.forceY(d=>d._y))\n          .force(\"charge\", d3.forceManyBody().strength(-0.05))\n          .alphaDecay(0.1)\n          .alphaMin(0.1)\n\n          let dates = Object.keys(this.state.data);\n\n          dates = dates.slice(0,5);\n          \n          const runAllDates = ()=>{\n            let date = dates.shift();\n            console.log(date);\n            let data_to_use = this.state.data[date];\n            console.log(data_to_use);\n\n            categories = JSON.parse(JSON.stringify(Utilities.categories));\n            nodes = addNodes(nodes, data_to_use, categories.shift());\n            updateForceLayout();\n\n            simulation.force(\"collision\", null)\n\n            simulation.on(\"end\", () => {\n              document.title = 'simulation ended';\n              if (categories.length>0) {\n                nodes = addNodes(nodes, data_to_use, categories.shift());\n                updateForceLayout();\n              } else {\n                document.title = 'running anticollision';\n                console.log('running anticollision');\n\n                simulation.force(\"collision\",\n                  d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n                    .strength(0.1)\n                );\n\n                simulation\n                  .alpha(1)\n                  .restart()\n                  .on('end',()=>{\n                    console.log('done anticollision, missing', dates.length)\n                    if (dates.length>0) {\n                      nodes.forEach(n=>{\n                        delete n.x;\n                        delete n.y;\n                        delete n.index;\n                        delete n.vx;\n                        delete n.vy;\n                        delete n.fx;\n                        delete n.fy;\n                      })\n                      nodes = [];\n                      runAllDates();\n                    } else {\n                      downloadSpatializedData(this.state.data)\n                    }\n                  });\n              }\n            })\n          }\n          runAllDates();\n      })\n    })\n\n    document.addEventListener('keypress', (e)=>{\n      if (e.key==='r'){\n        simulation.alpha(1).restart();\n      } else if (e.key==='\\\\'){\n        simulation.alpha(0.00001).restart();\n      } else if (e.key==='c' || e.keyCode===99){\n        nodes.forEach(n=>{\n          n.fx=null;\n          n.fy=null\n        })\n        simulation.force(\"collision\",\n          d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n            .strength(0.1)\n        );\n        simulation\n          .alpha(1)\n          .restart();\n\n      } else if (e.key==='d') {\n        downloadSpatializedData(nodes);\n      }\n    })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'100%', height:'100%'}}></svg>;\n  }\n}\n\nexport default Test;\n\nconst addNodes = (nodes, data, category)=>{\n  nodes.forEach(n=>{\n    n.fx=n.x;\n    n.fy=n.y\n  })\n  const newNodes = data.filter(d=>d.category===category);\n  const a = 360/newNodes.length * 20;\n  const r = Math.sqrt((newNodes.length+nodes.length)/Math.PI)*2;\n  newNodes.forEach((d,i)=>{\n    d.x=d._x + Math.cos(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n    d.y=d._y + Math.sin(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n  })\n  return nodes.concat(newNodes);\n}\n\nconst updateForceLayout = () => {\n  node = node.data(nodes, d=>d.id)\n  node.exit().remove();\n\n  node = node.enter().append('text')\n    .classed('node', true)\n    .attr('font-size',size+'px')\n    .text(d=>Utilities.emoji_dictionary[d.category])\n    .attr('x',d=>d.x)\n    .attr('y',d=>d.y)\n    .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended))\n    .merge(node);\n\n  simulation.nodes(nodes)\n    .alpha(1)\n    .restart();\n}\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\nfunction downloadSpatializedData(data) {\n  // for (let i=0; i<data.length; ++i){\n  //   data[i]._x = data[i].x;\n  //   data[i]._y = data[i].y;\n  //   delete data[i].index;\n  //   delete data[i].vx;\n  //   delete data[i].vy;\n  //   delete data[i].x;\n  //   delete data[i].y;\n  // }\n  var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n  FileSaver.saveAs(blob, \"covi-z-storico.json\");\n}\n\n// spatialization()\n// function spatialization() {\n//   if (simulationIsRunning) {\n//     document.title = 'a = ' + simulation.alpha();\n//     // node\n//     //   .attr('x',d=>d.x)\n//     //   .attr('y',d=>d.y);\n//     requestAnimationFrame(spatialization)\n//   }\n// }\n\n// node = node.data(nodes, (d,i)=>'node-'+i).enter().append('text').merge(node)\n//   .attr('font-size',size+'px')\n//   .text(d=>Utilities.emoji_dictionary[d.category])\n//   .attr('x',d=>d.x)\n//   .attr('y',d=>d.y);\n\n// for (let i=0; i<data.length; ++i){\n//   data[i]._x = data[i].x;\n//   data[i]._y = data[i].y;\n//   delete data[i].index;\n//   delete data[i].vx;\n//   delete data[i].vy;\n//   delete data[i].x;\n//   delete data[i].y;\n// }\n// var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"covi-z.json\");","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.01,\n    maxScale:7\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '⚪️',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌺'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\n// categories names cant start with same 4 beginning letters so that substring(0,4) returns all different values\nUtilities.categories = [\n    \"deceduti\",\n    \"terapia_intensiva\",\n    \"ricoverati_con_sintomi\",\n    \"isolamento_domiciliare\",\n    \"dimessi_guariti\",\n]\n\nUtilities.categories_en = [\n    \"deceased\",\n    \"intensive_care\",\n    \"hospitalized\",\n    \"home_isolation\",\n    \"recovered\"\n]\n\nUtilities.category2english = {\n    \"deceduti\":\"deceased\",\n    \"terapia_intensiva\":\"intensive_care\",\n    \"ricoverati_con_sintomi\":\"hospitalized\",\n    \"isolamento_domiciliare\":\"home_isolation\",\n    \"dimessi_guariti\":\"recovered\"\n}\n\nUtilities.map = {\n    width:768,\n    height:1024,\n    scale:30000\n}\n\nUtilities.easeInOutCubic=function(t){\n    return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1;\n}\n\nexport default Utilities;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\nimport Utilities from '../Utilities/Utilities';\n\nlet pixiApp, viewport, container, map, textures = {},\n    flowers = {},\n    width,\n    height,\n    margin=15,\n    dpr = window.devicePixelRatio || 1;\n\n// const projection = d3.geoConicEqualArea()\n// const projection = d3.geoTransverseMercator()\nconst projection = d3.geoNaturalEarth1()\n  // .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n  .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n  .scale(Utilities.map.scale)\n  .center([12.368775000000001, 42.9451139]);\n\nconst simulation = d3.forceSimulation()\n  .force(\"x\", d3.forceX().strength(0.15))\n  .force(\"y\", d3.forceY().strength(0.15))\n  .alphaMin(0.03)\n  .stop();\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSprites=this.updateSprites.bind(this);\n    this.repositionSprites=this.repositionSprites.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  updateSprites(){\n    const to_remove = {...flowers};\n    for (let i=0; i<this.props.data.length; ++i) {\n      const d = this.props.data[i];\n      delete d.date;\n      const id = d.id;\n      if (!flowers[id]) {\n        const sprite = PIXI.Sprite.from(textures[d.category]);\n        sprite.anchor.set(0.5);\n        sprite.scale.x = 1/7;\n        sprite.scale.y = 1/7;\n        sprite._data_ = d;\n        // sprite.interactive = true;\n        // sprite.buttonMode = true;\n        // sprite.on('click',()=>console.log(d));\n        flowers[this.props.data[i].id] = sprite;\n        container.addChild(sprite);\n      } else {\n        const current_x = flowers[id]._data_.x;\n        const current_y = flowers[id]._data_.y;\n        d.x = current_x;\n        d.y = current_y;\n        flowers[id]._data_ = d;\n      }\n      delete to_remove[id];\n    }\n\n    for (let id in to_remove) {\n      delete flowers[id];\n      container.removeChild(to_remove[id]);\n    }\n    // console.log(container)\n    if (this.props.data.length!==container.children.length) {\n      console.warn('Problem in sprites update:\\ntotal data:',this.props.data.length,'total sprites:',container.children.length);\n    }\n    this.repositionSprites();\n  }\n  repositionSprites(){\n    // models could be stripes, bunches, clusters\n    let simulation_is_running = true;\n    simulation.nodes(this.props.data);\n    if (this.props.model === 'stripes') {\n      simulation.force('x').x(d=> margin+d[`${this.props.model}_x`]*(width-margin*2) );\n      simulation.force('y').y(d=> margin+d[`${this.props.model}_y`]*(height-margin*2) );\n      viewport.snap(0,0,{topLeft:true,interrupt:true,removeOnComplete:true,removeOnInterrupt:true});\n      viewport.snapZoom({center:new PIXI.Point(width/2,height/2),width: width, interrupt:true, removeOnComplete: true, removeOnInterrupt: true});\n      map.renderable = false;\n    } else {\n      simulation.force('x').x(d=>+d[`${this.props.model}_x`]);\n      simulation.force('y').y(d=>+d[`${this.props.model}_y`]);\n\n      // const c = this.props.data.find(d=>d.denominazione_regione==='Lombardia');\n      // console.log(c)\n      // viewport.snap(Number(c.origin_x) - width/2, Number(c.origin_y) - height/2,{topLeft:true,interrupt:true,removeOnComplete:true,removeOnInterrupt:true});\n      // viewport.snapZoom({center:new PIXI.Point(width/2,height/2),width: width, interrupt:true, removeOnComplete: true, removeOnInterrupt: true});\n      \n      map.renderable = true;\n    }\n    simulation.on(\"end\", () => {\n      console.log('simulation ended for', this.props.model);\n      simulation_is_running = false;\n    });\n    simulation.on('end',()=>{\n      if (this.props.play){\n        this.props.changeDate(this.props.current_date_index+1)\n      }\n    })\n    simulation.alpha(1)\n    simulation.restart();\n\n    reposition();\n    function reposition(){\n      for(let i=0; i<container.children.length; i++){\n        container.children[i].x = container.children[i]._data_.x;\n        container.children[i].y = container.children[i]._data_.y;\n      }\n      if (simulation_is_running || simulation.alpha()>0.05){\n        requestAnimationFrame(reposition);\n      }\n    }\n  }\n  componentDidMount() {\n    width = this._rootNode.getBoundingClientRect().width;\n    height = this._rootNode.getBoundingClientRect().height;\n\n    pixiApp = new PIXI.Application({\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      autoResize: true\n    });\n    this._rootNode.appendChild(pixiApp.view);\n\n    viewport = new Viewport({\n      center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    pixiApp.stage.addChild(viewport);\n\n    map = new PIXI.Container();\n    map.renderable = false;\n    viewport.addChild(map);\n\n    for (let i=0; i<this.props.mapGeometries.features.length; i++) {\n      const region = this.props.mapGeometries.features[i];\n      const this_graphics = new PIXI.Graphics();\n      const path = d3.geoPath()\n        .projection(projection)\n        .context(this_graphics);\n      this_graphics.beginFill(0xffffff, 1);\n      this_graphics.lineStyle(1, 0x333333, 0.5);\n        path(region);\n      this_graphics.endFill();\n      map.addChild(this_graphics);\n    }\n\n    container = new PIXI.ParticleContainer(100000);\n    viewport.addChild(container);\n    pixiApp.loader.add('sprites', './flowers-textures-1.png');\n    pixiApp.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    pixiApp.loader.onComplete.add(async ()=>{\n      const baseTexture = pixiApp.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-1.json');\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures[texture_name.replace('.png','')] = texture;\n      }\n\n      this.updateSprites();\n    })\n    pixiApp.loader.load();\n  }\n  componentDidUpdate(prevProps){\n    simulation.stop();\n    if (prevProps.data !== this.props.data) {\n      this.updateSprites();\n    } else if (prevProps.model !== this.props.model) {\n      this.repositionSprites();\n    }\n    // console.log(container);\n  }\n  render() {\n    return <div style={{width:'100vw',height:'calc(100vh - 144px)'}} ref={this._setRef.bind(this)}></div>;\n  }\n}\n\nexport default PixiViz;\n\n\n\n// loadData(){\n//   return Promise.all([\n//     d3.json('./data/covi-z.json'),\n//     d3.json('./data/regioni.geojson'),\n//   ])\n// }\n// initPixiApp() {\n//   this.loadData().then( files => {\n//     let data = files[0];\n//     let mapData = files[1];\n\n//     pixiApp = new PIXI.Application({\n//       width: width,\n//       height: height,\n//       backgroundColor: 0xfafafa,\n//       resolution: dpr,\n//       autoResize: true\n//     });\n//     this._rootNode.appendChild(pixiApp.view);\n\n//     // create viewport and add it to the stage\n//     viewport = new Viewport({\n//       center: new PIXI.Point(-width/2, -height/2),\n//       passiveWheel: false,\n//       stopPropagation: true,\n//       divWheel: this._rootNode,\n//       screenWidth: width,\n//       screenHeight: height,\n//       worldWidth: width,\n//       worldHeight: height,\n//       interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n//     });\n//     viewport\n//       // .moveCenter(width/2,height/2)\n//       .clampZoom(Utilities.clampZoomOptions)\n//       .drag({pressDrag:true, clampWheel:true})\n//       .pinch()\n//       .wheel()\n//     pixiApp.stage.addChild(viewport);\n    \n//     // Draw Italy\n//     // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n//     projection = d3.geoConicEqualArea()\n//       .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n//       .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n//       .scale(Utilities.map.scale)\n//       .center([12.368775000000001, 42.9451139]);\n\n\n//     for (let i=0; i<mapData.features.length; i++) {\n//       const region = mapData.features[i];\n\n//       const this_graphics = new PIXI.Graphics();\n\n//       const path = d3.geoPath()\n//         .projection(projection)\n//         .context(this_graphics);\n\n//       this_graphics.beginFill(0xffffff, 1);\n//       this_graphics.lineStyle(0.25, 0xcccccc);\n//         path(region);\n//       this_graphics.endFill();\n\n//       viewport.addChild(this_graphics);\n//     }\n\n//     // Sprites for emoji\n//     container = new PIXI.Container();\n//     viewport.addChild(container);\n\n\n//   });\n// }\n// componentDidMount() {\n  \n// }\n// loadEmoji(){\n//   emojiCounter++;\n//   if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n//     const icons = document.querySelectorAll('#textures-generation>*');\n//     const textures = {};\n//     for (let i=0; i<icons.length; ++i) {\n//       html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n//         textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n//         if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n//           this.setState({textures:textures},()=>{\n//             this.initPixiApp();\n//           })\n//         }\n//       });\n//     }\n//   }\n// }","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PixiViz from '../PixiViz/PixiViz';\nimport Utilities from '../Utilities/Utilities';\n// import Utilities from '../Utilities/Utilities';\nclass VizView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      play:false\n    }\n    this.changeDate = this.changeDate.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  changeDate(index){\n    if (index<0) {\n      index = this.state.dates.length-1\n    } else if (index>this.state.dates.length-1) {\n      index = 0\n    }\n    const newDate = this.state.dates[index];\n    this.setState({current_date:newDate, current_date_index:index, data_day:this.state.data[newDate]});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  async componentDidMount() {\n    // init interface and things\n    // ...\n    // load data\n    const fetched = await Promise.all([\n          d3.csv('./data/list-daily-datasets.csv'),\n          d3.json('./data/regioni.geojson'),\n        ])\n        \n    const dates = fetched[0].map(d=>d.date);\n\n    let data = {};\n\n    const dailyDatasets = await Promise.all(fetched[0].map(d=>d3.csv('./data/'+d.file_name)))\n    for (let i=0; i<dates.length; i++) {\n      for (let ii=0; ii<dailyDatasets[i].length; ii++){\n        const elm = dailyDatasets[i][ii];\n        elm.x=Number(elm.origin_x);\n        elm.y=Number(elm.origin_y);\n        // elm.category = Utilities.category2english[elm.category];\n      }\n      data[dates[i]] = dailyDatasets[i];\n    }\n    \n    let index = dates.length-1;\n    index = 0;\n    const data_day = data[dates[index]];\n\n    await this.setState({data:data, dates:dates, current_date:dates[index], current_date_index:index, data_day:data_day, model:'bunches', mapGeometries:fetched[1]});\n  }\n  render() {\n    return  <div ref={this._setRef.bind(this)}>\n              <header>\n                header\n                <p>\n                  <input type=\"button\" name=\"prev-date\" value=\"⏪\" onClick={ ()=>this.changeDate(this.state.current_date_index-1) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"▶️\" onClick={ ()=>this.setState({play:!this.state.play}, this.changeDate(this.state.current_date_index+1)) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"⏩\" onClick={ ()=>this.changeDate(this.state.current_date_index+1) } />\n                  <input type=\"button\" name=\"bands\" value=\"🖼\" onClick={ ()=>this.changeModel('stripes') } />\n                  <input type=\"button\" name=\"bunch\" value=\"💐\" onClick={ ()=>this.changeModel('bunches') } />\n                  <input type=\"button\" name=\"clusters\" value=\"🎯\" onClick={ ()=>this.changeModel('clusters') } />\n                  {this.state.current_date}\n                </p>\n              </header>\n              \n              {this.state.data &&\n                <PixiViz\n                  data={this.state.data_day.reverse()}\n                  model={this.state.model}\n                  mapGeometries={this.state.mapGeometries}\n                  play={this.state.play}\n                  current_date_index={this.state.current_date_index}\n                  changeDate={this.changeDate}\n                />\n              }\n              <footer>\n                footer\n              </footer>\n            </div>;\n  }\n}\n\nexport default VizView;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\nconst dpr = window.devicePixelRatio || 1;\n\nclass PIXIPerformancesTest extends Component {\n\n  componentDidMount(){\n    const width = window.innerWidth / dpr;\n    const height = window.innerHeight / dpr;\n\n    let ticker = PIXI.Ticker.shared;\n    ticker.stop();\n\n    const app = new PIXI.Application({\n      autoStart:false,\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      sharedTicker: false\n    });\n    this._rootNode.appendChild(app.view);\n\n    const viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    app.stage.addChild(viewport);\n\n    const amount = 200000;\n    const container = new PIXI.ParticleContainer(amount, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n\n    viewport.addChild(container);\n\n    const textures = []\n    \n    app.loader.add('sprites', './flowers-textures-1.png');\n    app.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    app.loader.onComplete.add(async ()=>{\n      console.log('loader completed')\n      const baseTexture = app.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-1.json');\n\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures.push(texture);\n      }\n\n      for (let i=0; i<amount; ++i) {\n        const index_texture = i%5;\n        const sprite = new PIXI.Sprite(textures[index_texture]);\n  \n        sprite.speedX = (-0.5 + Math.random());\n        sprite.speedY = (-0.5 + Math.random());\n      \n        sprite.anchor.x = 0.5;\n        sprite.x = width*Math.random();\n        sprite.y = height*Math.random();\n        sprite.scale.x = 1/2/2/2;\n        sprite.scale.y = 1/2/2/2;\n  \n        container.addChild(sprite);\n      }\n\n      let counter = 0;\n      const update = function () {          \n        if (counter < 1000) {\n          counter++;\n          for (var i = 0; i < amount; i++) \n          {\n            var sprite = container.children[i];\n            sprite.x += sprite.speedX;\n            sprite.y += sprite.speedY;\n            \n            if (sprite.x > width)\n            {\n              sprite.speedX *= -1;\n              sprite.x = width;\n            }\n            else if (sprite.x < 0)\n            {\n              sprite.speedX *= -1;\n              sprite.x = 0;\n            }\n            // y\n            if (sprite.y > height)\n            {\n              sprite.speedY *= -1;\n              sprite.y = height;\n            }\n            else if (sprite.y < 0)\n            {\n              sprite.speedY *= -1;\n              sprite.y = 0;\n            }\n          }\n        };\n        \n        app.renderer.render(viewport);\n        requestAnimationFrame(update);\n      }\n      update();\n\n    })\n    app.loader.load();\n  }\n  \n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  render() {\n    return <div ref={this._setRef.bind(this)}></div>;\n  }\n}\n\nexport default PIXIPerformancesTest;\n","import React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\nimport VizView from './VizView';\nimport PIXIPerformancesTest from './PIXIPerformancesTest';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/performances\">Testing PIXIjs performances</Link>\n                </li>\n                <li>\n                  <Link to=\"/viz\">Visualization</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n        <Route path=\"/viz\">\n          <VizView />\n        </Route>\n        <Route path=\"/performances\">\n          <PIXIPerformancesTest />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}