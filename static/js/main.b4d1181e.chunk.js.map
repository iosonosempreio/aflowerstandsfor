{"version":3,"sources":["Test/Test.js","Utilities/Utilities.js","PixiViz/PixiViz.js","VizView/VizView.js","App.js","serviceWorker.js","index.js"],"names":["node","projection","Utilities","size","minScale","maxScale","width","height","scale","simulation","d3","stop","emoji","clampZoomOptions","nodes","categories","JSON","parse","stringify","Test","props","state","data","componentNode","this","_rootNode","fitSize","map","translate","center","then","csv","dataByDates","key","d","entries","console","log","forEach","date","this_date","raw_data","values","r","point","long","lat","x","y","region","i","c","ii","obj","denominazione_regione","push","setState","svg","g","append","zoom","extent","window","innerWidth","innerHeight","scaleExtent","on","attr","transform","call","selectAll","tick","document","title","alpha","force","_x","_y","strength","alphaDecay","alphaMin","dates","Object","keys","slice","runAllDates","shift","data_to_use","addNodes","updateForceLayout","length","restart","n","index","vx","vy","fx","fy","downloadSpatializedData","addEventListener","e","keyCode","ref","_setRef","bind","style","Component","category","newNodes","filter","a","Math","sqrt","PI","cos","sin","concat","id","exit","remove","enter","classed","text","emoji_dictionary","dragstarted","dragged","dragended","merge","active","alphaTarget","blob","Blob","type","FileSaver","saveAs","pixiApp","viewport","container","textures","dpr","devicePixelRatio","PixiViz","updateSprites","existing_ids","children","_data_","incoming_ids","to_add","to_update","indexOf","to_remove","this_sprite","sprite","PIXI","from","anchor","set","interactive","addChild","removeChild","warn","repositionSprites","simulation_is_running","model","charAt","reposition","requestAnimationFrame","getBoundingClientRect","backgroundColor","resolution","autoResize","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","clampZoom","drag","pressDrag","clampWheel","pinch","wheel","stage","mapGeometries","features","this_graphics","path","context","beginFill","lineStyle","endFill","texture","prevProps","VizView","changeDate","newDate","current_date","current_date_index","data_day","newModel","Promise","all","fetched","file_name","dailyDatasets","elm","Number","name","value","onClick","changeModel","reverse","App","className","basename","exact","to","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4d1181e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport FileSaver from 'file-saver';\n\nimport Utilities from '../Utilities/Utilities';\n\nconst data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst simulation = d3.forceSimulation().stop();\nconst size = Utilities.emoji.size/Utilities.clampZoomOptions.maxScale;\n\nlet nodes = [], categories = JSON.parse(JSON.stringify(Utilities.categories)),\n    node,\n    projection;\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n\n    projection = d3.geoConicEqualArea()\n        .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n        .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n        .scale(Utilities.map.scale)\n        .center([12.368775000000001, 42.9451139]);\n  }\n  componentDidMount() {\n\n    d3.csv(data_url).then(csv=>{\n\n      // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia'||d.denominazione_regione===\"Piemonte\"||d.denominazione_regione===\"Emilia Romagna\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lazio'||d.denominazione_regione===\"Abruzzo\"||d.denominazione_regione===\"Umbria\")\n      // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n      // csv = csv.filter(d=>d.denominazione_regione==='Piemonte')\n\n      const dataByDates = d3.nest()\n        .key(d=>d.data)\n        .entries(csv);\n\n      console.log(dataByDates);\n      \n      const data = {};\n\n      // generating data\n      dataByDates.forEach(date=>{\n\n        const this_date = date.key\n        const raw_data = date.values;\n        raw_data.forEach(r=>{\n          const point = projection([r.long,r.lat]);\n          r.x = point[0];\n          r.y = point[1];\n        })\n\n        data[this_date] = [];\n\n        raw_data.forEach((region,i)=>{\n          Utilities.categories.forEach((c)=>{\n            for (let ii=0; ii<region[c]; ++ii){\n              const obj={\n                'id': region.denominazione_regione + '-' + c + '-' + ii+1,\n                'category': c,\n                'denominazione_regione': region.denominazione_regione,\n                'date': region.data,\n                '_x': region.x,\n                '_y': region.y,\n                'x': region.x,\n                'y': region.y\n              }\n              data[this_date].push(obj);\n            }\n          })\n        })\n\n      })\n      \n      this.setState({data:data}, ()=>{\n\n        const svg = d3.select(this._rootNode);\n        const g = svg.append('g');\n        \n        function zoomed() {\n          g.attr(\"transform\", d3.event.transform);\n        }\n  \n        const zoom = d3.zoom()\n          .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n          .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale*2])\n          .on(\"zoom\", zoomed);\n        \n        svg.call(zoom);\n        svg.call(zoom.transform, d3.zoomIdentity\n            .translate(-5, -340)\n            .scale(5)\n          );\n        \n        node = g.selectAll('text')\n        simulation.nodes(nodes)\n          .tick(1000)\n          .on(\"tick\", ()=>{\n            document.title = simulation.alpha();\n            node.attr('x',d=>d.x).attr('y',d=>d.y);\n          })\n          .force(\"x\", d3.forceX(d=>d._x))\n          .force(\"y\", d3.forceY(d=>d._y))\n          .force(\"charge\", d3.forceManyBody().strength(-0.05))\n          .alphaDecay(0.1)\n          .alphaMin(0.1)\n\n          let dates = Object.keys(this.state.data);\n\n          dates = dates.slice(0,5);\n          \n          const runAllDates = ()=>{\n            let date = dates.shift();\n            console.log(date);\n            let data_to_use = this.state.data[date];\n            console.log(data_to_use);\n\n            categories = JSON.parse(JSON.stringify(Utilities.categories));\n            nodes = addNodes(nodes, data_to_use, categories.shift());\n            updateForceLayout();\n\n            simulation.force(\"collision\", null)\n\n            simulation.on(\"end\", () => {\n              document.title = 'simulation ended';\n              if (categories.length>0) {\n                nodes = addNodes(nodes, data_to_use, categories.shift());\n                updateForceLayout();\n              } else {\n                document.title = 'running anticollision';\n                console.log('running anticollision');\n\n                simulation.force(\"collision\",\n                  d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n                    .strength(0.1)\n                );\n\n                simulation\n                  .alpha(1)\n                  .restart()\n                  .on('end',()=>{\n                    console.log('done anticollision, missing', dates.length)\n                    if (dates.length>0) {\n                      nodes.forEach(n=>{\n                        delete n.x;\n                        delete n.y;\n                        delete n.index;\n                        delete n.vx;\n                        delete n.vy;\n                        delete n.fx;\n                        delete n.fy;\n                      })\n                      nodes = [];\n                      runAllDates();\n                    } else {\n                      downloadSpatializedData(this.state.data)\n                    }\n                  });\n              }\n            })\n          }\n          runAllDates();\n      })\n    })\n\n    document.addEventListener('keypress', (e)=>{\n      if (e.key==='r'){\n        simulation.alpha(1).restart();\n      } else if (e.key==='\\\\'){\n        simulation.alpha(0.00001).restart();\n      } else if (e.key==='c' || e.keyCode===99){\n        nodes.forEach(n=>{\n          n.fx=null;\n          n.fy=null\n        })\n        simulation.force(\"collision\",\n          d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n            .strength(0.1)\n        );\n        simulation\n          .alpha(1)\n          .restart();\n\n      } else if (e.key==='d') {\n        downloadSpatializedData(nodes);\n      }\n    })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'100%', height:'100%'}}></svg>;\n  }\n}\n\nexport default Test;\n\nconst addNodes = (nodes, data, category)=>{\n  nodes.forEach(n=>{\n    n.fx=n.x;\n    n.fy=n.y\n  })\n  const newNodes = data.filter(d=>d.category===category);\n  const a = 360/newNodes.length * 20;\n  const r = Math.sqrt((newNodes.length+nodes.length)/Math.PI)*2;\n  newNodes.forEach((d,i)=>{\n    d.x=d._x + Math.cos(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n    d.y=d._y + Math.sin(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n  })\n  return nodes.concat(newNodes);\n}\n\nconst updateForceLayout = () => {\n  node = node.data(nodes, d=>d.id)\n  node.exit().remove();\n\n  node = node.enter().append('text')\n    .classed('node', true)\n    .attr('font-size',size+'px')\n    .text(d=>Utilities.emoji_dictionary[d.category])\n    .attr('x',d=>d.x)\n    .attr('y',d=>d.y)\n    .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended))\n    .merge(node);\n\n  simulation.nodes(nodes)\n    .alpha(1)\n    .restart();\n}\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\nfunction downloadSpatializedData(data) {\n  // for (let i=0; i<data.length; ++i){\n  //   data[i]._x = data[i].x;\n  //   data[i]._y = data[i].y;\n  //   delete data[i].index;\n  //   delete data[i].vx;\n  //   delete data[i].vy;\n  //   delete data[i].x;\n  //   delete data[i].y;\n  // }\n  var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n  FileSaver.saveAs(blob, \"covi-z-storico.json\");\n}\n\n// spatialization()\n// function spatialization() {\n//   if (simulationIsRunning) {\n//     document.title = 'a = ' + simulation.alpha();\n//     // node\n//     //   .attr('x',d=>d.x)\n//     //   .attr('y',d=>d.y);\n//     requestAnimationFrame(spatialization)\n//   }\n// }\n\n// node = node.data(nodes, (d,i)=>'node-'+i).enter().append('text').merge(node)\n//   .attr('font-size',size+'px')\n//   .text(d=>Utilities.emoji_dictionary[d.category])\n//   .attr('x',d=>d.x)\n//   .attr('y',d=>d.y);\n\n// for (let i=0; i<data.length; ++i){\n//   data[i]._x = data[i].x;\n//   data[i]._y = data[i].y;\n//   delete data[i].index;\n//   delete data[i].vx;\n//   delete data[i].vy;\n//   delete data[i].x;\n//   delete data[i].y;\n// }\n// var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"covi-z.json\");","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.01,\n    maxScale:7\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '⚪️',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌺'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\n// categories names cant start with same 4 beginning letters so that substring(0,4) returns all different values\nUtilities.categories = [\n    \"deceduti\",\n    \"terapia_intensiva\",\n    \"ricoverati_con_sintomi\",\n    \"isolamento_domiciliare\",\n    \"dimessi_guariti\",\n    // \"totale_ospedalizzati\",\n    // \"totale_attualmente_positivi\",\n    // \"nuovi_attualmente_positivi\",\n    // \"tamponi\"\n  ]\n\nUtilities.map = {\n    width:768,\n    height:1024,\n    scale:30000\n}\n\nexport default Utilities;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\nimport Utilities from '../Utilities/Utilities';\n\nlet pixiApp, viewport, container, textures = {},\n    width,\n    height,\n    dpr = window.devicePixelRatio || 1;\n\n// const projection = d3.geoConicEqualArea()\n// const projection = d3.geoTransverseMercator()\nconst projection = d3.geoNaturalEarth1()\n  // .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n  .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n  .scale(Utilities.map.scale)\n  .center([12.368775000000001, 42.9451139]);\n\nconst simulation = d3.forceSimulation()\n  .force(\"x\", d3.forceX(d=>d.x))\n  .force(\"y\", d3.forceY(d=>d.y))\n  .stop();\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSprites=this.updateSprites.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  updateSprites(){\n\n    let existing_ids=[];\n    for (let i=0; i<container.children.length; ++i){\n      existing_ids.push(container.children[i]._data_.id);\n    };\n    let incoming_ids=[];\n    let to_add=[];\n    let to_update=[];\n    for (let i=0; i<this.props.data.length; ++i) {\n      const d = this.props.data[i];\n      incoming_ids.push(d.id);\n      if (existing_ids.indexOf(d.id)===-1) {\n        to_add.push(d);\n      } else {\n        to_update.push(d);\n      }\n    }\n\n    let to_remove = []\n    \n    for (let i=0; i<container.children.length; ++i){\n      const this_sprite = container.children[i];\n      if (incoming_ids.indexOf(this_sprite._data_.id)===-1) {\n        to_remove.push(this_sprite);\n      }\n    };\n\n    // console.log(to_add, to_update, to_remove);\n    \n    for (let i=0; i<to_add.length; ++i) {\n      // create a new Sprite from an image path\n      const sprite = PIXI.Sprite.from(textures[to_add[i].category]);\n      // center the sprite's anchor point\n      sprite.anchor.set(0.5);\n      // move the sprite to the center of the screen\n      // sprite.scale.x = 1/dpr/Utilities.clampZoomOptions.maxScale;\n      // sprite.scale.y = 1/dpr/Utilities.clampZoomOptions.maxScale;\n      sprite.scale.x = 1/7;\n      sprite.scale.y = 1/7;\n\n      sprite._data_ = to_add[i];\n      sprite.interactive = true;\n      sprite.on('mousedown', ()=>console.log(sprite._data_));\n      container.addChild(sprite);\n    }\n    \n    for (let i=0; i<to_update.length; ++i) {\n      const index = existing_ids.indexOf(to_update[i].id);\n      const sprite = container.children[index];\n      sprite._data_ = to_update[i];\n    }\n\n    for (let i=0; i<to_remove.length; ++i) {\n      container.removeChild(to_remove[i]);\n    }\n\n    if (this.props.data.length!==container.children.length) {\n      console.warn('Problem in sprites update:\\ntotal data:',this.props.data.length,'total sprites:',container.children.length);\n    }\n    this.repositionSprites();\n  }\n  repositionSprites(){\n    // models could be stripes, bunches, clusters\n    let simulation_is_running = true;\n    simulation.nodes(this.props.data);\n    if (this.props.model === 'stripes') {\n      simulation.force('x').x(d=>+d[`${this.props.model.charAt(0)}_x`]*width);\n      simulation.force('y').y(d=>+d[`${this.props.model.charAt(0)}_y`]*height);\n    } else {\n      simulation.force('x').x(d=>+d[`${this.props.model.charAt(0)}_x`]);\n      simulation.force('y').y(d=>+d[`${this.props.model.charAt(0)}_y`]);\n    }\n    simulation.on(\"end\", () => {\n      console.log('simulation ended for', this.props.model);\n      simulation_is_running = false;\n    });\n    simulation.alpha(1)\n    simulation.restart();\n\n    reposition();\n    function reposition(){\n      for(let i=0; i<container.children.length; i++){\n        container.children[i].x = container.children[i]._data_.x;\n        container.children[i].y = container.children[i]._data_.y;\n      }\n      if (simulation_is_running || simulation.alpha()>0.1){\n        requestAnimationFrame(reposition);\n      }\n    }\n  }\n  componentDidMount() {\n    width = this._rootNode.getBoundingClientRect().width;\n    height = this._rootNode.getBoundingClientRect().height;\n\n    pixiApp = new PIXI.Application({\n      width: width,\n      height: height,\n      // backgroundColor: 0xf4fff1,\n      backgroundColor: 0xfff3bf,\n      resolution: dpr,\n      autoResize: true\n    });\n    this._rootNode.appendChild(pixiApp.view);\n\n    viewport = new Viewport({\n      center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    pixiApp.stage.addChild(viewport);\n\n    for (let i=0; i<this.props.mapGeometries.features.length; i++) {\n      const region = this.props.mapGeometries.features[i];\n\n      const this_graphics = new PIXI.Graphics();\n\n      const path = d3.geoPath()\n        .projection(projection)\n        .context(this_graphics);\n\n      this_graphics.beginFill(0xffffff, 1);\n      this_graphics.lineStyle(1, 0x333333);\n        path(region);\n      this_graphics.endFill();\n\n      viewport.addChild(this_graphics);\n    }\n\n    container = new PIXI.Container();\n    viewport.addChild(container);\n\n    Utilities.categories.forEach(category=>{\n      // source, frame, orig, trim, rotate\n      const texture = PIXI.Texture.from(`./${category}_40x40.png`);\n      textures[category] = texture;\n    })\n\n    this.updateSprites();\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.data !== this.props.data) {\n      this.updateSprites();\n    } else if (prevProps.model !== this.props.model) {\n      this.repositionSprites();\n    }\n  }\n  render() {\n    return <div style={{width:'100vw',height:'100vh'}} ref={this._setRef.bind(this)}></div>;\n  }\n}\n\nexport default PixiViz;\n\n\n\n// loadData(){\n//   return Promise.all([\n//     d3.json('./data/covi-z.json'),\n//     d3.json('./data/regioni.geojson'),\n//   ])\n// }\n// initPixiApp() {\n//   this.loadData().then( files => {\n//     let data = files[0];\n//     let mapData = files[1];\n\n//     pixiApp = new PIXI.Application({\n//       width: width,\n//       height: height,\n//       backgroundColor: 0xfafafa,\n//       resolution: dpr,\n//       autoResize: true\n//     });\n//     this._rootNode.appendChild(pixiApp.view);\n\n//     // create viewport and add it to the stage\n//     viewport = new Viewport({\n//       center: new PIXI.Point(-width/2, -height/2),\n//       passiveWheel: false,\n//       stopPropagation: true,\n//       divWheel: this._rootNode,\n//       screenWidth: width,\n//       screenHeight: height,\n//       worldWidth: width,\n//       worldHeight: height,\n//       interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n//     });\n//     viewport\n//       // .moveCenter(width/2,height/2)\n//       .clampZoom(Utilities.clampZoomOptions)\n//       .drag({pressDrag:true, clampWheel:true})\n//       .pinch()\n//       .wheel()\n//     pixiApp.stage.addChild(viewport);\n    \n//     // Draw Italy\n//     // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n//     projection = d3.geoConicEqualArea()\n//       .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n//       .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n//       .scale(Utilities.map.scale)\n//       .center([12.368775000000001, 42.9451139]);\n\n\n//     for (let i=0; i<mapData.features.length; i++) {\n//       const region = mapData.features[i];\n\n//       const this_graphics = new PIXI.Graphics();\n\n//       const path = d3.geoPath()\n//         .projection(projection)\n//         .context(this_graphics);\n\n//       this_graphics.beginFill(0xffffff, 1);\n//       this_graphics.lineStyle(0.25, 0xcccccc);\n//         path(region);\n//       this_graphics.endFill();\n\n//       viewport.addChild(this_graphics);\n//     }\n\n//     // Sprites for emoji\n//     container = new PIXI.Container();\n//     viewport.addChild(container);\n\n\n//   });\n// }\n// componentDidMount() {\n  \n// }\n// loadEmoji(){\n//   emojiCounter++;\n//   if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n//     const icons = document.querySelectorAll('#textures-generation>*');\n//     const textures = {};\n//     for (let i=0; i<icons.length; ++i) {\n//       html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n//         textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n//         if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n//           this.setState({textures:textures},()=>{\n//             this.initPixiApp();\n//           })\n//         }\n//       });\n//     }\n//   }\n// }","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PixiViz from '../PixiViz/PixiViz';\n// import Utilities from '../Utilities/Utilities';\nclass VizView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    }\n    this.changeDate = this.changeDate.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  changeDate(index){\n    if (index<0) {\n      index = this.state.dates.length-1\n    } else if (index>this.state.dates.length-1) {\n      index = 0\n    }\n    const newDate = this.state.dates[index];\n    this.setState({current_date:newDate, current_date_index:index, data_day:this.state.data[newDate]});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  async componentDidMount() {\n    // init interface and things\n    // ...\n    // load data\n    const fetched = await Promise.all([\n          d3.csv('./data/list-daily-datasets.csv'),\n          d3.json('./data/regioni.geojson'),\n        ])\n        \n    const dates = fetched[0].map(d=>d.date);\n\n    let data = {};\n\n    const dailyDatasets = await Promise.all(fetched[0].map(d=>d3.csv('./data/'+d.file_name)))\n    for (let i=0; i<dates.length; i++) {\n      for (let ii=0; ii<dailyDatasets[i].length; ii++){\n        const elm = dailyDatasets[i][ii];\n        elm.x=elm._x=Number(elm._x);\n        elm.y=elm._y=Number(elm._y);\n      }\n      data[dates[i]] = dailyDatasets[i];\n    }\n    \n    const index = 0;\n    const data_day = data[dates[index]];\n\n    await this.setState({data:data, dates:dates, current_date:dates[index], current_date_index:index, data_day:data_day, model:'bunches', mapGeometries:fetched[1]});\n  }\n  render() {\n    return  <div ref={this._setRef.bind(this)}>\n              <p>\n                <input type=\"button\" name=\"prev-date\" value=\"⏪\" onClick={ ()=>this.changeDate(this.state.current_date_index-1) } />\n                <input type=\"button\" name=\"prev-date\" value=\"⏩\" onClick={ ()=>this.changeDate(this.state.current_date_index+1) } />\n                <input type=\"button\" name=\"bands\" value=\"🖼\" onClick={ ()=>this.changeModel('stripes') } />\n                <input type=\"button\" name=\"bunch\" value=\"💐\" onClick={ ()=>this.changeModel('bunches') } />\n                <input type=\"button\" name=\"clusters\" value=\"🎯\" onClick={ ()=>this.changeModel('clusters') } />\n              </p>\n              {this.state.data && <PixiViz data={this.state.data_day.reverse()} model={this.state.model} mapGeometries={this.state.mapGeometries} />}\n            </div>;\n  }\n}\n\nexport default VizView;\n","import React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\nimport VizView from './VizView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/svg\">SVG Version</Link>\n                </li>\n                <li>\n                  <Link to=\"/pixi\">PIXIjs version</Link>\n                </li>\n                <li>\n                  <Link to=\"/viz\">Visualization</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n        <Route path=\"/viz\">\n          <VizView />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}