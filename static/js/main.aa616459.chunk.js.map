{"version":3,"sources":["Test/Test.js","PixiViz/PixiViz.js","Visualization/Visualization.js","Utilities/Utilities.js","VizView/VizView.js","PIXIPerformancesTest/PIXIPerformancesTest.js","Italy/Italy.js","App.js","serviceWorker.js","index.js"],"names":["country","region","width","height","app","viewport","flowersContainer","geography","textures","available_dates","Utilities","size","minScale","maxScale","scale","t","regions_coordinates","categories","categories_codes","regions","d3","stop","projection","path","radius","exponent","color","Test","props","componentNode","this","_rootNode","flowers_simulations","shuffle","a","i","length","j","Math","floor","random","date","filter","d","denominazione_regione","forEach","regional_flowers","flowers","id","toString","substring","code","console","log","regional_links","links","source","regional_simulation","force","distance","strength","on","document","title","alpha","flower","attr","x","y","f","bunches_x","bunches_y","restart","clusters_x","clusters_y","g_flowers","append","selectAll","data","enter","classed","style","svg","g","zoom","transform","call","topoWorld","world","topojson","objects","countries","italy","features","find","fitExtent","exit","remove","merge","csv","dataByDates","key","entries","selected_day","data_regions","values","trentino_elements","codice_regione","trentino","stato","lat","long","ricoverati_con_sintomi","Number","terapia_intensiva","totale_ospedalizzati","isolamento_domiciliare","totale_positivi","variazione_totale_positivi","nuovi_positivi","dimessi_guariti","deceduti","totale_casi","tamponi","note_it","note_en","index_of_bolzano","indexOf","splice","index_of_trento","push","total","center_x","region_name","lon","center_y","point","Object","keys","category","o","padStart","ii","link","target","range","domain","ref","_setRef","bind","backgroundColor","Component","dpr","window","devicePixelRatio","updateQueue","prevTime","PixiViz","translate","map","center","state","viewBuffer","innerWidth","innerHeight","amount","unique_IDS","PIXI","resolution","powerPreference","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","drag","pressDrag","clampWheel","pinch","wheel","stage","addChild","container","vertices","position","rotation","uvs","tint","loader","add","onProgress","e","progress","onComplete","baseTexture","resources","sprites","texture","texture_name","flowers_textures_info","frames","frame","w","h","replace","entity","tempSpritesList","sprite","Flower","anchor","ViewBuffer","setDrawList","model","drawObjects","Date","now","update","deltaTime","render","requestAnimationFrame","load","prevProps","clearObjects","startAnimation","Sprites","master","drawList","animationTime","timeLeft","removeChildren","setLastPoint","setNextPoint","animate","delta","pop","currentTime","easeInOutCubic","moveToNextPoint","nextPoint","lastPoint","VizView","play","changeDate","index","dates","newDate","setState","current_date","current_date_index","data_day","newModel","Promise","all","fetched","file_name","dailyDatasets","elm","origin_x","origin_y","mapGeometries","reverse","top","type","name","value","onClick","changeModel","gpu","GPU","PIXIPerformancesTest","shared","autoStart","sharedTicker","flowers_matrix","speedX","speedY","createKernel","arr","box","speed_x","thread","new_x","speed_y","new_y","setOutput","counter","children","Visualization","unique_IDS_dictionary","autoDensity","antialias","querySelector","country_info","country_code","feature","this_graphic","context","beginFill","lineStyle","endFill","flowersTextures","flower_id","day","day_index","prevState","bottom","Italy","datasets","className","App","basename","exact","to","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa616459.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\nimport FileSaver from 'file-saver';\nimport Utilities from '../Utilities/Utilities';\n\n// const data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst data_url = './data/dpc-covid19-ita-regioni.csv';\n\n\nconst regions_coordinates = [\n  {\n      \"region_name\": \"Abruzzo\",\n      \"lat\": \"42.216666666667\",\n      \"lon\": \"13.833333333333\",\n  },\n  {\n      \"region_name\": \"Valle d'Aosta\",\n      \"lat\": \"45.716666666667\",\n      \"lon\": \"7.3666666666667\",\n  },\n  {\n      \"region_name\": \"Puglia\",\n      \"lat\": \"41.008611111111\",\n      \"lon\": \"16.512777777778\",\n  },\n  {\n      \"region_name\": \"Basilicata\",\n      \"lat\": \"40.5\",\n      \"lon\": \"16.5\",\n  },\n  {\n      \"region_name\": \"Calabria\",\n      \"lat\": \"39\",\n      \"lon\": \"16.5\",\n  },\n  {\n      \"region_name\": \"Campania\",\n      \"lat\": \"40.75\",\n      \"lon\": \"14.783333333333\",\n  },\n  {\n      \"region_name\": \"Emilia-Romagna\",\n      \"lat\": \"44.75\",\n      \"lon\": \"11\",\n  },\n  {\n      \"region_name\": \"Friuli Venezia Giulia\",\n      \"lat\": \"46.1\",\n      \"lon\": \"13.116666666667\",\n  },\n  {\n      \"region_name\": \"Lazio\",\n      \"lat\": \"41.9\",\n      \"lon\": \"12.716666666667\",\n  },\n  {\n      \"region_name\": \"Liguria\",\n      \"lat\": \"44.45\",\n      \"lon\": \"8.7666666666667\",\n  },\n  {\n      \"region_name\": \"Lombardia\",\n      \"lat\": \"45.65\",\n      \"lon\": \"9.95\",\n  },\n  {\n      \"region_name\": \"Marche\",\n      \"lat\": \"43.316666666667\",\n      \"lon\": \"13\",\n  },\n  {\n      \"region_name\": \"Molise\",\n      \"lat\": \"41.6997\",\n      \"lon\": \"14.6111\",\n  },\n  {\n      \"region_name\": \"Piemonte\",\n      \"lat\": \"45.25\",\n      \"lon\": \"7.9166666666667\",\n  },\n  {\n      \"region_name\": \"Sardegna\",\n      \"lat\": \"40.05\",\n      \"lon\": \"9.0833333333333\",\n  },\n  {\n      \"region_name\": \"Sicilia\",\n      \"lat\": \"37.599958333333\",\n      \"lon\": \"14.015377777778\",\n  },\n  {\n      \"region_name\": \"Trentino-Alto Adige\",\n      \"lat\": \"46.383333333333\",\n      \"lon\": \"11.416666666667\",\n  },\n  {\n      \"region_name\": \"Toscana\",\n      \"lat\": \"43.35\",\n      \"lon\": \"11.016666666667\",\n  },\n  {\n      \"region_name\": \"Umbria\",\n      \"lat\": \"42.983333333333\",\n      \"lon\": \"12.566666666667\",\n  },\n  {\n      \"region_name\": \"Veneto\",\n      \"lat\": \"45.733333333333\",\n      \"lon\": \"11.85\",\n  }\n];\n\nconst categories = {\n  \"deceduti\":\"deceased\",\n  \"terapia_intensiva\":\"intensive_cares\",\n  \"ricoverati_con_sintomi\":\"hospitalized\",\n  \"isolamento_domiciliare\":\"home_isolation\",\n  \"dimessi_guariti\":\"recovered\"\n};\n\nconst categories_codes = {\n  \"deceduti\":\"1\",\n  \"terapia_intensiva\":\"2\",\n  \"ricoverati_con_sintomi\":\"3\",\n  \"isolamento_domiciliare\":\"4\",\n  \"dimessi_guariti\":\"5\"\n};\n\nconst simulation = d3.forceSimulation().stop();\n\nlet countries = [], country,\n    regions = {}, region,\n    nodes = [], node,\n    projection = d3.geoNaturalEarth1(),\n    path = d3.geoPath().projection(projection);\n\nlet radius = d3.scalePow()\n  .exponent(0.5);\nlet color = d3.scaleOrdinal(d3.schemeCategory10);\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n\n  async componentDidMount() {\n    const svg = d3.select(this._rootNode);\n    const g = svg.append('g');\n    const zoom = d3.zoom().on(\"zoom\", ()=>{g.attr(\"transform\", d3.event.transform);});\n    \n    svg.call(zoom);\n    // svg.call(zoom.transform, d3.zoomIdentity\n    //   .translate(-265, -178)\n    //   .scale(3)\n    // );\n\n    const topoWorld = await d3.json('./data/world-50m.json');\n    // contries codes https://en.wikipedia.org/wiki/ISO_3166-1_numeric\n    let world = topojson.feature(topoWorld, topoWorld.objects.countries);\n    const italy = world.features.find(d=>d.id==='380') // this is italy\n    projection.fitExtent([[5,5],[768-10,1024-10]], italy)\n    // projection.scale(10000)\n    country = g.append('g').attr('class','countries').selectAll('.country');\n\n    country = country.data(world.features);\n    country.exit().remove();\n    country.enter().append('path')\n        .classed('country', true)\n        .merge(country)\n        .attr('d', path)\n        .attr('fill','#fafafa')\n        .attr('stroke','#eef3bd')\n        .attr('stroke-width','0.5px');\n\n    const csv = await d3.csv(data_url);\n    let flowers = {};\n    let links = {};\n    let dataByDates = d3.nest()\n      .key(d=>d.data)\n      .entries(csv);\n\n    let selected_day\n    selected_day = '2020-03-01T17:00:00';\n    // selected_day = '2020-03-10T18:00:00';\n    // selected_day = '2020-02-24T18:00:00';\n    // selected_day = '2020-03-20T17:00:00';\n    // selected_day = '2020-03-29T17:00:00';\n    // selected_day = '2020-03-31T17:00:00';\n\n    dataByDates = dataByDates.filter(d=>d.key===selected_day)\n\n    dataByDates.forEach(date=>{\n      flowers[date.key] = [];\n      links[date.key] = [];\n      regions[date.key] = [];\n      let data_regions = date.values//.filter(d=>d.denominazione_regione==='Piemonte'||d.denominazione_regione==='Lombardia');\n      let trentino_elements = data_regions.filter(d=>d.codice_regione===\"04\") // Bolzano and Trento are different elements with same region code\n      const trentino = {\n        data: date.key,\n        stato: \"ITA\",\n        codice_regione: \"04\",\n        denominazione_regione: \"Trentino-Alto Adige\",\n        lat: \"46.49933453\",\n        long: \"11.35662422\",\n        ricoverati_con_sintomi: Number(trentino_elements[0].ricoverati_con_sintomi) + Number(trentino_elements[1].ricoverati_con_sintomi),\n        terapia_intensiva: Number(trentino_elements[0].terapia_intensiva) + Number(trentino_elements[1].terapia_intensiva),\n        totale_ospedalizzati: Number(trentino_elements[0].totale_ospedalizzati) + Number(trentino_elements[1].totale_ospedalizzati),\n        isolamento_domiciliare: Number(trentino_elements[0].isolamento_domiciliare) + Number(trentino_elements[1].isolamento_domiciliare),\n        totale_positivi: Number(trentino_elements[0].totale_positivi) + Number(trentino_elements[1].totale_positivi),\n        variazione_totale_positivi: Number(trentino_elements[0].variazione_totale_positivi) + Number(trentino_elements[1].variazione_totale_positivi),\n        nuovi_positivi: Number(trentino_elements[0].nuovi_positivi) + Number(trentino_elements[1].nuovi_positivi),\n        dimessi_guariti: Number(trentino_elements[0].dimessi_guariti) + Number(trentino_elements[1].dimessi_guariti),\n        deceduti: Number(trentino_elements[0].deceduti) + Number(trentino_elements[1].deceduti),\n        totale_casi: Number(trentino_elements[0].totale_casi) + Number(trentino_elements[1].totale_casi),\n        tamponi: Number(trentino_elements[0].tamponi) + Number(trentino_elements[1].tamponi),\n        note_it: \"\",\n        note_en: \"\"\n      };\n      const index_of_bolzano = data_regions.indexOf(trentino_elements[0]);\n      data_regions.splice(index_of_bolzano,1);\n      const index_of_trento = data_regions.indexOf(trentino_elements[1]);\n      data_regions.splice(index_of_trento,1);\n      data_regions.push(trentino);\n      data_regions.forEach(region=>{\n        // if(date.key===selected_day) {\n        //   console.log(region);\n        // };\n        region.code = region.codice_regione;\n        region.total = region.totale_casi;\n        region.center_x = regions_coordinates.find(d=>d.region_name === region.denominazione_regione).lon;\n        region.center_y = regions_coordinates.find(d=>d.region_name === region.denominazione_regione).lat;\n        const point = projection([region.center_x,region.center_y]);\n        region.x = point[0];\n        region.y = point[1];\n        delete region.data;\n        delete region.codice_regione;\n        delete region.stato;\n        delete region.lat;\n        delete region.long;\n        delete region.totale_casi;\n        delete region.totale_ospedalizzati;\n        delete region.totale_positivi;\n        delete region.variazione_totale_positivi;\n        delete region.nuovi_positivi;\n        delete region.tamponi;\n        delete region.note_it;\n        delete region.note_en;\n        regions[date.key].push(region);\n        Object.keys(categories).forEach(category=>{\n          for (let i=0; i<region[category]; ++i){\n            const o = { id: region.code.toString()+''+categories_codes[category]+''+i.toString().padStart(6,\"0\") };\n            flowers[date.key].push(o);\n            if (i===0) {\n              for (let ii=1; ii<Number(categories_codes[category]); ++ii){\n                const link = {\n                  source: region.code.toString()+''+ii+''+'0'.toString().padStart(6,\"0\"),\n                  target: o.id\n                }\n                links[date.key].push(link);\n              }\n            }\n            else {\n              const link = {\n                source: region.code.toString()+''+categories_codes[category]+''+'0'.toString().padStart(6,\"0\"),\n                target: o.id\n              }\n              links[date.key].push(link);\n            }\n          }\n        })\n      })\n      // if(date.key===selected_day) {\n      //   console.log(flowers[date.key]);\n      //   console.log(links[date.key]);\n      // };\n    });\n\n    \n\n    radius.range([0,35]).domain([0,d3.max(regions[selected_day], d=>d.total)]);\n    region = g.selectAll('.region');\n    region = region.data(regions[selected_day], d=>d.code)\n      .enter().append('circle')\n        .attr('class',d=>d.denominazione_regione)\n        .attr('fill','white')\n        .attr('stroke','#cccccc')\n        .classed('region',true)\n        .attr('r', d=>radius(+d.total));\n\n    const simulation_regions = d3.forceSimulation(regions[selected_day])\n      .force('x', d3.forceX(d=>d.x))\n      .force('y', d3.forceY(d=>d.y))\n      .force('collision', d3.forceCollide(d=>radius(d.total)))\n      .on('tick', ()=>{\n        region.attr('cx',d=>d.x)\n          .attr('cy',d=>d.y);\n      })\n      .on('end',()=>{\n        flowers_simulations(selected_day);\n      })\n      .alpha(1)\n      .restart();\n    \n    let g_flowers = g.append('g').classed('flowers', true);\n\n    function flowers_simulations(date) {\n      regions[date]\n      .filter(d=>d.denominazione_regione==='Lombardia')\n      .forEach(region=>{\n        let regional_flowers = flowers[date].filter(d=>d.id.toString().substring(0,2)===region.code);\n        console.log(regional_flowers.length);\n        // .filter(d=>d.denominazione_regione==='Lombardia')\n        shuffle(regional_flowers);\n        const regional_links = links[date].filter(d=>d.source.toString().substring(0,2)===region.code);\n        // console.log(regional_flowers)\n        // console.log(regional_links)\n\n        const regional_simulation = d3.forceSimulation(regional_flowers)\n          .force('center', d3.forceCenter(0,0))\n          .force('links', d3.forceLink([]).id(d=>d.id).distance(0))\n          .force('collision', d3.forceCollide(0.45))\n          .force('x', d3.forceX().strength(.09))\n          .force('y', d3.forceY().strength(.09))\n          .on('tick',()=>{\n            document.title = regional_simulation.alpha();\n            flower\n              .attr('cx',d=>d.x)\n              .attr('cy',d=>d.y);\n          })\n          .alpha(1)\n          .on('end',()=>{\n            console.log(region.denominazione_regione, 'simulation ended')\n            flower\n                  .attr('cx',d=>d.x)\n                  .attr('cy',d=>d.y);\n            regional_flowers.forEach(f=>{\n              f.bunches_x = f.x;\n              f.bunches_y = f.y;\n            })\n            regional_simulation.force('links').links(regional_links);\n            regional_simulation\n              .alpha(1)\n              .restart()\n              .on('tick',()=>{\n                document.title = regional_simulation.alpha();\n                flower\n                  .attr('cx',d=>d.x)\n                  .attr('cy',d=>d.y);\n              })\n              .on('end',()=>{\n                document.title = 'simulation ended';\n                flower\n                  .attr('cx',d=>d.x)\n                  .attr('cy',d=>d.y);\n                regional_flowers.forEach(f=>{\n                  f.clusters_x = f.x;\n                  f.clusters_y = f.y;\n                });\n                console.log(region.denominazione_regione, 'simulation clusters ended')\n              });\n          });\n        \n        let flower = g_flowers.append('g').attr('transform','translate('+region.x+','+region.y+')').attr('class',region.code).selectAll('.flower');\n        flower = flower.data(regional_flowers, d=>d.id).enter().append('circle')\n          .classed('flower', true)\n          .attr('r', 0.5)\n          .attr('fill', d=>color(d.id.toString().substring(2,4)))\n          .style('opacity',.7)\n          .attr('cx', region.x)\n          .attr('cy', region.y);\n      })\n    }\n\n    /**\n     * Shuffles array in place. ES6 version\n     * @param {Array} a items An array containing the items.\n     */\n    function shuffle(a) {\n      for (let i = a.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [a[i], a[j]] = [a[j], a[i]];\n      }\n      return a;\n    }\n\n    // .then(csv=>{\n\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lombardia'||d.denominazione_regione===\"Piemonte\"||d.denominazione_regione===\"Emilia Romagna\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lazio'||d.denominazione_regione===\"Abruzzo\"||d.denominazione_regione===\"Umbria\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Piemonte')\n\n    //   const dataByDates = d3.nest()\n    //     .key(d=>d.data)\n    //     .entries(csv);\n\n    //   console.log(dataByDates);\n      \n    //   const data = {};\n\n    //   // generating data\n    //   dataByDates.forEach(date=>{\n\n    //     const this_date = date.key\n    //     const raw_data = date.values;\n    //     raw_data.forEach(r=>{\n    //       const point = projection([r.long,r.lat]);\n    //       r.x = point[0];\n    //       r.y = point[1];\n    //     })\n\n    //     data[this_date] = [];\n\n    //     raw_data.forEach((region,i)=>{\n    //       Utilities.categories.forEach((c)=>{\n    //         for (let ii=0; ii<region[c]; ++ii){\n    //           const obj={\n    //             'id': region.denominazione_regione + '-' + c + '-' + ii+1,\n    //             'category': c,\n    //             'denominazione_regione': region.denominazione_regione,\n    //             'date': region.data,\n    //             '_x': region.x,\n    //             '_y': region.y,\n    //             'x': region.x,\n    //             'y': region.y\n    //           }\n    //           data[this_date].push(obj);\n    //         }\n    //       })\n    //     })\n\n    //   })\n      \n    //   this.setState({data:data}, ()=>{\n\n    //     const svg = d3.select(this._rootNode);\n    //     const g = svg.append('g');\n        \n    //     function zoomed() {\n    //       g.attr(\"transform\", d3.event.transform);\n    //     }\n  \n    //     const zoom = d3.zoom()\n    //       .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n    //       .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale*2])\n    //       .on(\"zoom\", zoomed);\n        \n    //     svg.call(zoom);\n    //     svg.call(zoom.transform, d3.zoomIdentity\n    //         .translate(-5, -340)\n    //         .scale(5)\n    //       );\n        \n    //     node = g.selectAll('text')\n    //     simulation.nodes(nodes)\n    //       .tick(1000)\n    //       .on(\"tick\", ()=>{\n    //         document.title = simulation.alpha();\n    //         node.attr('x',d=>d.x).attr('y',d=>d.y);\n    //       })\n    //       .force(\"x\", d3.forceX(d=>d._x))\n    //       .force(\"y\", d3.forceY(d=>d._y))\n    //       .force(\"charge\", d3.forceManyBody().strength(-0.05))\n    //       .alphaDecay(0.1)\n    //       .alphaMin(0.1)\n\n    //       let dates = Object.keys(this.state.data);\n\n    //       dates = dates.slice(0,5);\n          \n    //       const runAllDates = ()=>{\n    //         let date = dates.shift();\n    //         console.log(date);\n    //         let data_to_use = this.state.data[date];\n    //         console.log(data_to_use);\n\n    //         categories = JSON.parse(JSON.stringify(Utilities.categories));\n    //         nodes = addNodes(nodes, data_to_use, categories.shift());\n    //         updateForceLayout();\n\n    //         simulation.force(\"collision\", null)\n\n    //         simulation.on(\"end\", () => {\n    //           document.title = 'simulation ended';\n    //           if (categories.length>0) {\n    //             nodes = addNodes(nodes, data_to_use, categories.shift());\n    //             updateForceLayout();\n    //           } else {\n    //             document.title = 'running anticollision';\n    //             console.log('running anticollision');\n\n    //             simulation.force(\"collision\",\n    //               d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n    //                 .strength(0.1)\n    //             );\n\n    //             simulation\n    //               .alpha(1)\n    //               .restart()\n    //               .on('end',()=>{\n    //                 console.log('done anticollision, missing', dates.length)\n    //                 if (dates.length>0) {\n    //                   nodes.forEach(n=>{\n    //                     delete n.x;\n    //                     delete n.y;\n    //                     delete n.index;\n    //                     delete n.vx;\n    //                     delete n.vy;\n    //                     delete n.fx;\n    //                     delete n.fy;\n    //                   })\n    //                   nodes = [];\n    //                   runAllDates();\n    //                 } else {\n    //                   downloadSpatializedData(this.state.data)\n    //                 }\n    //               });\n    //           }\n    //         })\n    //       }\n    //       runAllDates();\n    //   })\n    // })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'768px', height:'1024px', backgroundColor:'#eef3bd'}}></svg>;\n  }\n}\n\nexport default Test;\n\n// const addNodes = (nodes, data, category)=>{\n//   nodes.forEach(n=>{\n//     n.fx=n.x;\n//     n.fy=n.y\n//   })\n//   const newNodes = data.filter(d=>d.category===category);\n//   const a = 360/newNodes.length * 20;\n//   const r = Math.sqrt((newNodes.length+nodes.length)/Math.PI)*2;\n//   newNodes.forEach((d,i)=>{\n//     d.x=d._x + Math.cos(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n//     d.y=d._y + Math.sin(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n//   })\n//   return nodes.concat(newNodes);\n// }\n\n// const updateForceLayout = () => {\n//   node = node.data(nodes, d=>d.id)\n//   node.exit().remove();\n\n//   node = node.enter().append('text')\n//     .classed('node', true)\n//     .attr('font-size',size+'px')\n//     .text(d=>Utilities.emoji_dictionary[d.category])\n//     .attr('x',d=>d.x)\n//     .attr('y',d=>d.y)\n//     .call(d3.drag()\n//           .on(\"start\", dragstarted)\n//           .on(\"drag\", dragged)\n//           .on(\"end\", dragended))\n//     .merge(node);\n\n//   simulation.nodes(nodes)\n//     .alpha(1)\n//     .restart();\n// }\n\n// function dragstarted(d) {\n//   if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n//   d.fx = d.x;\n//   d.fy = d.y;\n// }\n\n// function dragged(d) {\n//   d.fx = d3.event.x;\n//   d.fy = d3.event.y;\n// }\n\n// function dragended(d) {\n//   if (!d3.event.active) simulation.alphaTarget(0);\n//   d.fx = null;\n//   d.fy = null;\n// }\n\n// function downloadSpatializedData(data) {\n//   // for (let i=0; i<data.length; ++i){\n//   //   data[i]._x = data[i].x;\n//   //   data[i]._y = data[i].y;\n//   //   delete data[i].index;\n//   //   delete data[i].vx;\n//   //   delete data[i].vy;\n//   //   delete data[i].x;\n//   //   delete data[i].y;\n//   // }\n//   var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n//   FileSaver.saveAs(blob, \"covi-z-storico.json\");\n// }\n\n// spatialization()\n// function spatialization() {\n//   if (simulationIsRunning) {\n//     document.title = 'a = ' + simulation.alpha();\n//     // node\n//     //   .attr('x',d=>d.x)\n//     //   .attr('y',d=>d.y);\n//     requestAnimationFrame(spatialization)\n//   }\n// }\n\n// node = node.data(nodes, (d,i)=>'node-'+i).enter().append('text').merge(node)\n//   .attr('font-size',size+'px')\n//   .text(d=>Utilities.emoji_dictionary[d.category])\n//   .attr('x',d=>d.x)\n//   .attr('y',d=>d.y);\n\n// for (let i=0; i<data.length; ++i){\n//   data[i]._x = data[i].x;\n//   data[i]._y = data[i].y;\n//   delete data[i].index;\n//   delete data[i].vx;\n//   delete data[i].vy;\n//   delete data[i].x;\n//   delete data[i].y;\n// }\n// var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"covi-z.json\");\n\n\n    // projection = d3.geoConicEqualArea()\n    //     .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n    //     .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n    //     .scale(Utilities.map.scale)\n    //     .center([12.368775000000001, 42.9451139]);\n\n\n\n    // document.addEventListener('keypress', (e)=>{\n    //   if (e.key==='r'){\n    //     simulation.alpha(1).restart();\n    //   } else if (e.key==='\\\\'){\n    //     simulation.alpha(0.00001).restart();\n    //   } else if (e.key==='c' || e.keyCode===99){\n    //     nodes.forEach(n=>{\n    //       n.fx=null;\n    //       n.fy=null\n    //     })\n    //     simulation.force(\"collision\",\n    //       d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n    //         .strength(0.1)\n    //     );\n    //     simulation\n    //       .alpha(1)\n    //       .restart();\n\n    //   } else if (e.key==='d') {\n    //     downloadSpatializedData(nodes);\n    //   }\n    // })","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\nimport Utilities from '../Utilities/Utilities';\n\nlet container,\n    dpr = window.devicePixelRatio || 1;\n\nlet width, height, app;\nlet updateQueue=[];\nlet prevTime=0;\n// const projection = d3.geoConicEqualArea()\n// const projection = d3.geoTransverseMercator()\nconst projection = d3.geoNaturalEarth1()\n  // .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n  .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n  .scale(Utilities.map.scale)\n  .center([12.368775000000001, 42.9451139]);\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {viewBuffer:null};\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n\n  componentDidMount(){\n    width = window.innerWidth / dpr;\n    height = window.innerHeight / dpr;\n    const amount=Object.keys(this.props.unique_IDS).length;\n    console.log(\"amount:\", amount);\n    //let ticker = PIXI.Ticker.shared;\n    //ticker.stop();\n\n    app = new PIXI.Application({\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      //sharedTicker: false,\n     // autoStart:false\n    });\n\n    this._rootNode.appendChild(app.view);\n\n    const viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    app.stage.addChild(viewport);\n\n    const container = new PIXI.ParticleContainer(amount, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n\n    viewport.addChild(container);\n\n    const textures = {};\n    \n    app.loader.add('sprites', './flowers-textures-ita-1.png');\n    app.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    app.loader.onComplete.add(async ()=>{\n      console.log('loader completed')\n      const baseTexture = app.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-ita-1.json');\n\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures[texture_name.replace('.png','')] = texture;\n      }\n      const tempSpritesList={};\n      for (const entity in this.props.unique_IDS) {\n        const sprite = new Flower(textures[this.props.unique_IDS[entity].category]);\n        sprite.x = Number(this.props.unique_IDS[entity].position.x);\n        sprite.y = Number(this.props.unique_IDS[entity].position.y);\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        sprite.scale.x = 1/2/2/2;\n        sprite.scale.y = 1/2/2/2;\n  \n        tempSpritesList[entity]=sprite;\n      }\n      this.state.viewBuffer = new ViewBuffer(tempSpritesList, container);\n      this.state.viewBuffer.setDrawList(this.props.data, this.props.model);\n      this.state.viewBuffer.drawObjects();\n      prevTime = Date.now();\n      const update = function () {    \n        const toSeconds=1000;\n        const deltaTime = (Date.now() - prevTime) / toSeconds;\n        prevTime = Date.now();\n        for(let i=0; i < updateQueue.length;++i)\n        {\n          updateQueue[i](deltaTime);\n        }      \n        app.renderer.render(viewport);\n        requestAnimationFrame(update);\n      }\n      update();\n\n    })\n    app.loader.load();\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.data !== this.props.data) {\n      //update draw list\n      this.state.viewBuffer.clearObjects();\n      this.state.viewBuffer.setDrawList(this.props.data, this.props.model);\n      this.state.viewBuffer.drawObjects();\n    } else if (prevProps.model !== this.props.model) {\n      //animate moveto see ViewBuffer startAnimation()\n      this.state.viewBuffer.model = this.props.model;\n      this.state.viewBuffer.startAnimation(5, app);\n    }\n    // console.log(container);\n  }\n  render() {\n    return <div style={{width:'100vw',height:'100vh'}} ref={this._setRef.bind(this)}></div>;\n  }\n}\n\n\nclass ViewBuffer{\n  /**\n   * \n   * @param {{id:Flower}} Sprites \n   * @param {PIXI.ParticleContainer} container\n   */\n  constructor(Sprites, container)\n  {\n    this.master=Sprites;\n    this.container = container;\n  }\n  master={};\n  drawList=[];\n  animationTime=0;\n  timeLeft=0;\n  app=null;\n  container=null;\n  model=null;\n  setDrawList(drawList, model){\n    this.drawList = drawList;\n    this.model = model;\n  }\n  clearObjects(){\n      this.container.removeChildren();\n  }\n  drawObjects(){\n    if(this.model === \"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.container.addChild(this.master[this.drawList[i].id]);\n      }\n      return;\n    }\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]);\n      this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.container.addChild(this.master[this.drawList[i].id]);\n    }\n  }\n  /**\n   * \n   * @param {Number} animationTime - in seconds \n   * @param {PIXI.Application} app \n   */\n  startAnimation(animationTime, app){\n    this.animationTime = animationTime;\n    this.timeLeft = 0;\n    this.app = app;\n    if(this.model===\"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        point.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    else{\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      let point = new PIXI.Point();\n      point.x = Number(this.drawList[i][this.model+\"_x\"]);\n      point.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.master[this.drawList[i].id].setLastPoint();\n      this.master[this.drawList[i].id].setNextPoint(point);\n    }\n  }\n    updateQueue.push(this.animate.bind(this));\n  }\n  animate(delta){\n    this.timeLeft += delta;\n    if(this.timeLeft >= this.animationTime)\n    {\n      updateQueue.pop();\n    }\n    else\n    {\n      const currentTime = Utilities.easeInOutCubic(this.timeLeft / this.animationTime);\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].moveToNextPoint(currentTime);\n      }\n    }\n\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint.x;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint.y; \n  }\n}\n\n\nexport default PixiViz;\n\n\n\n// loadData(){\n//   return Promise.all([\n//     d3.json('./data/covi-z.json'),\n//     d3.json('./data/regioni.geojson'),\n//   ])\n// }\n// initPixiApp() {\n//   this.loadData().then( files => {\n//     let data = files[0];\n//     let mapData = files[1];\n\n//     pixiApp = new PIXI.Application({\n//       width: width,\n//       height: height,\n//       backgroundColor: 0xfafafa,\n//       resolution: dpr,\n//       autoResize: true\n//     });\n//     this._rootNode.appendChild(pixiApp.view);\n\n//     // create viewport and add it to the stage\n//     viewport = new Viewport({\n//       center: new PIXI.Point(-width/2, -height/2),\n//       passiveWheel: false,\n//       stopPropagation: true,\n//       divWheel: this._rootNode,\n//       screenWidth: width,\n//       screenHeight: height,\n//       worldWidth: width,\n//       worldHeight: height,\n//       interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n//     });\n//     viewport\n//       // .moveCenter(width/2,height/2)\n//       .clampZoom(Utilities.clampZoomOptions)\n//       .drag({pressDrag:true, clampWheel:true})\n//       .pinch()\n//       .wheel()\n//     pixiApp.stage.addChild(viewport);\n    \n//     // Draw Italy\n//     // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n//     projection = d3.geoConicEqualArea()\n//       .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n//       .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n//       .scale(Utilities.map.scale)\n//       .center([12.368775000000001, 42.9451139]);\n\n\n//     for (let i=0; i<mapData.features.length; i++) {\n//       const region = mapData.features[i];\n\n//       const this_graphics = new PIXI.Graphics();\n\n//       const path = d3.geoPath()\n//         .projection(projection)\n//         .context(this_graphics);\n\n//       this_graphics.beginFill(0xffffff, 1);\n//       this_graphics.lineStyle(0.25, 0xcccccc);\n//         path(region);\n//       this_graphics.endFill();\n\n//       viewport.addChild(this_graphics);\n//     }\n\n//     // Sprites for emoji\n//     container = new PIXI.Container();\n//     viewport.addChild(container);\n\n\n//   });\n// }\n// componentDidMount() {\n  \n// }\n// loadEmoji(){\n//   emojiCounter++;\n//   if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n//     const icons = document.querySelectorAll('#textures-generation>*');\n//     const textures = {};\n//     for (let i=0; i<icons.length; ++i) {\n//       html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n//         textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n//         if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n//           this.setState({textures:textures},()=>{\n//             this.initPixiApp();\n//           })\n//         }\n//       });\n//     }\n//   }\n// }","import React, { Component } from 'react';\nimport * as PIXI from \"pixi.js\";\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport { Viewport } from \"pixi-viewport\";\nimport Utilities from '../Utilities/Utilities';\n\nlet app, viewport, flowersContainer, geography, textures,\n    dpr=window.devicePixelRatio || 1,\n    width=window.innerWidth,\n    height=window.innerHeight,\n    available_dates,\n    projection = d3.geoNaturalEarth1(),\n    path = d3.geoPath(),\n    updateQueue=[],\n    prevTime=0;\n\nclass Visualization extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      'model':'bunches',\n      'viewBuffer':null,\n      'day':'none',\n      'day_index':-1\n    };\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  componentDidMount(){\n    // Handle unique IDS\n    const unique_IDS_dictionary = {};\n    available_dates = Object.keys(this.props.data);\n    available_dates.forEach(date=>{\n      for (let i=0; i<this.props.data[date].length; ++i){\n        const elm = this.props.data[date][i];\n        if (!(elm.id in unique_IDS_dictionary)){\n          // every ID is a string of 9 numbers:\n          // 121000001 > 12=code of region, 1=code of category, 000001=index\n          // the combination of those digits makes unique IDS\n          unique_IDS_dictionary[elm.id]={};\n        }\n      }\n    })\n    const unique_IDS = Object.keys(unique_IDS_dictionary);\n\n    // Init app\n    app = new PIXI.Application({\n      width: width,\n      height: height,\n      backgroundColor: 0xfafafa,\n      autoDensity:true,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      antialias:false,\n      sharedTicker: false,\n      autoStart:false\n    });\n    let ticker = PIXI.Ticker.shared;\n    ticker.stop();\n    this._rootNode.querySelector('#visualization').appendChild(app.view);\n\n    // Init viewport\n    viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel();\n    app.stage.addChild(viewport);\n\n    // Initialize containers\n    geography = new PIXI.Container();\n    viewport.addChild(geography);\n    const topoWorld = this.props.topojson;\n    // contries codes https://en.wikipedia.org/wiki/ISO_3166-1_numeric\n    let world = topojson.feature(topoWorld, topoWorld.objects.countries);\n    const country = world.features.find(d=>d.id===this.props.country_info.country_code)\n    projection.fitExtent([[5,5],[768-10,1024-10]], country);\n    world.features.filter(d=>d.id===this.props.country_info.country_code).forEach(feature=>{\n      const this_graphic = new PIXI.Graphics();\n      path.projection(projection).context(this_graphic);\n      this_graphic.beginFill(0xdfffd6, 1);\n      this_graphic.lineStyle(1, 0xfafafa, 0.5);\n      path(feature);\n      this_graphic.endFill();\n      geography.addChild(this_graphic);\n    });\n    \n    flowersContainer = new PIXI.ParticleContainer(unique_IDS.length, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n    viewport.addChild(flowersContainer);\n\n    app.loader.add('flowersTextures','./flowers-textures-1.json');\n    app.loader.onComplete.add(()=>{\n        textures = app.loader.resources.flowersTextures.textures;\n        const tempSpritesList={};\n        for (let i=0; i<unique_IDS.length; ++i) {\n          const flower_id=unique_IDS[i];\n          const category = this.props.country_info.categories_codes[flower_id.substring(2,3)]+'.png';\n          const sprite = new Flower(textures[category]);\n          sprite.x = 50;\n          sprite.y = 50;\n          sprite.anchor.x = 0.5;\n          sprite.anchor.y = 0.5;\n          sprite.scale.x = 1/40 * 8;\n          sprite.scale.y = 1/40 * 8;\n          tempSpritesList[flower_id]=sprite;\n        }\n\n        const viewBuffer = new ViewBuffer(tempSpritesList, flowersContainer);\n        this.setState({day:available_dates[0], day_index:0, viewBuffer:viewBuffer});\n\n        prevTime = Date.now();\n        const update = function () {    \n          const toSeconds=1000;\n          const deltaTime = (Date.now() - prevTime) / toSeconds;\n          prevTime = Date.now();\n          for(let i=0; i < updateQueue.length;++i)\n          {\n            updateQueue[i](deltaTime);\n          }      \n          app.renderer.render(viewport);\n          requestAnimationFrame(update);\n        }\n        update();\n      });\n    app.loader.load();\n  }\n  componentDidUpdate(prevProps, prevState){\n    console.log('did update')\n    if (prevState.day_index !== this.state.day_index) {\n      //update draw list\n      console.log('day')\n      this.state.viewBuffer.clearObjects();\n      this.state.viewBuffer.setDrawList(this.props.data[available_dates[this.state.day_index]], this.state.model);\n      this.state.viewBuffer.drawObjects();\n    } else if (prevState.model !== this.state.model) {\n      //animate moveto see ViewBuffer startAnimation()\n      console.log('animation')\n      this.state.viewBuffer.model = this.state.model;\n      this.state.viewBuffer.startAnimation(5, app);\n    } else {\n      console.log('none of above')\n    }\n    // if (this.state.model === 'stripes') {\n    //   geography.renderable = false;\n    //   viewport.snap(0, 0, {topLeft:true,interrupt:true,removeOnComplete:true,removeOnInterrupt:true});\n    //   viewport.snapZoom({width: width, interrupt:true, removeOnComplete: true, removeOnInterrupt: true});\n    // } else {\n    //   geography.renderable = true;\n    // }\n  }\n  changeDate(index){\n    if (index<0) {\n      index = available_dates.length-1\n    } else if (index>available_dates.length-1) {\n      index = 0\n    }\n    const newDate = available_dates[index];\n    this.setState({day:newDate, day_index:index});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  render() {\n    return <div style={{width:'100vw',height:'100vh'}} ref={this._setRef.bind(this)}>\n      <div id=\"visualization\"></div>\n      <div id=\"controls\" style={{position:'fixed', bottom:0}}>\n        <p>\n          <input type=\"button\" name=\"prev-date\" value=\"previous day\" onClick={ ()=>this.changeDate(this.state.day_index-1) } />\n          {this.state.day && <span>{this.state.day}</span>}\n          <input type=\"button\" name=\"prev-date\" value=\"next day\" onClick={ ()=>this.changeDate(this.state.day_index+1) } />\n          <input type=\"button\" name=\"bands\" value=\"stripes\" onClick={ ()=>this.changeModel('stripes') } />\n          <input type=\"button\" name=\"bunch\" value=\"bunches\" onClick={ ()=>this.changeModel('bunches') } />\n          <input type=\"button\" name=\"clusters\" value=\"clusters\" onClick={ ()=>this.changeModel('clusters') } />\n        </p>\n      </div>\n    </div>;\n  }\n}\n\nclass ViewBuffer{\n  /**\n   * \n   * @param {{id:Flower}} Sprites \n   * @param {PIXI.ParticleContainer} container\n   */\n  constructor(Sprites, container)\n  {\n    this.master=Sprites;\n    this.container = container;\n  }\n  master={};\n  drawList=[];\n  animationTime=0;\n  timeLeft=0;\n  app=null;\n  container=null;\n  model=null;\n  setDrawList(drawList, model){\n    this.drawList = drawList;\n    this.model = model;\n  }\n  clearObjects(){\n      this.container.removeChildren();\n  }\n  drawObjects(){\n    if(this.model === \"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.container.addChild(this.master[this.drawList[i].id]);\n      }\n      return;\n    }\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]);\n      this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.container.addChild(this.master[this.drawList[i].id]);\n    }\n  }\n  /**\n   * \n   * @param {Number} animationTime - in seconds \n   * @param {PIXI.Application} app \n   */\n  startAnimation(animationTime, app){\n    console.log('animation')\n    this.animationTime = animationTime;\n    this.timeLeft = 0;\n    this.app = app;\n    if(this.model===\"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        point.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    else{\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]);\n        point.y = Number(this.drawList[i][this.model+\"_y\"]);\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    updateQueue.push(this.animate.bind(this));\n  }\n  animate(delta){\n    this.timeLeft += delta;\n    if(this.timeLeft >= this.animationTime)\n    {\n      updateQueue.pop();\n    }\n    else\n    {\n      const currentTime = Utilities.easeInOutCubic(this.timeLeft / this.animationTime);\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].moveToNextPoint(currentTime);\n      }\n    }\n\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint.x;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint.y; \n  }\n}\n\nexport default Visualization;","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.01,\n    maxScale:7\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '⚪️',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌺'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\n// categories names cant start with same 4 beginning letters so that substring(0,4) returns all different values\nUtilities.categories = [\n    \"deceduti\",\n    \"terapia_intensiva\",\n    \"ricoverati_con_sintomi\",\n    \"isolamento_domiciliare\",\n    \"dimessi_guariti\",\n]\n\nUtilities.categories_en = [\n    \"deceased\",\n    \"intensive_care\",\n    \"hospitalized\",\n    \"home_isolation\",\n    \"recovered\"\n]\n\nUtilities.category2english = {\n    \"deceduti\":\"deceased\",\n    \"terapia_intensiva\":\"intensive_care\",\n    \"ricoverati_con_sintomi\":\"hospitalized\",\n    \"isolamento_domiciliare\":\"home_isolation\",\n    \"dimessi_guariti\":\"recovered\"\n}\n\nUtilities.map = {\n    width:768,\n    height:1024,\n    scale:30000\n}\n\nUtilities.easeInOutCubic=function(t){\n    return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1;\n}\n\nexport default Utilities;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PixiViz from '../PixiViz/PixiViz';\n\nconst initialModel=\"bunches\";\n// import Utilities from '../Utilities/Utilities';\nclass VizView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      play:false,\n      unique_IDS:{}\n    }\n    this.changeDate = this.changeDate.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  changeDate(index){\n    if (index<0) {\n      index = this.state.dates.length-1\n    } else if (index>this.state.dates.length-1) {\n      index = 0\n    }\n    const newDate = this.state.dates[index];\n    this.setState({current_date:newDate, current_date_index:index, data_day:this.state.data[newDate]});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  async componentDidMount() {\n    // init interface and things\n    // ...\n    // load data\n    const fetched = await Promise.all([\n          d3.csv('./data/list-daily-datasets.csv'),\n          d3.json('./data/regioni.geojson'),\n        ])\n        \n    const dates = fetched[0].map(d=>d.date);\n\n    let data = {};\n    const dailyDatasets = await Promise.all(fetched[0].map(d=>d3.csv('./data/'+d.file_name)))\n    for (let i=0; i<dates.length; i++) {\n      for (let ii=0; ii<dailyDatasets[i].length; ii++){\n        const elm = dailyDatasets[i][ii];\n        elm.x=Number(elm.origin_x);\n        elm.y=Number(elm.origin_y);\n        if(!(elm.id in this.state.unique_IDS))\n        {\n          this.state.unique_IDS[elm.id] = {category: elm.category, position: {x:elm[initialModel+\"_x\"], y:elm[initialModel+\"_y\"]}};\n        }\n      }\n      data[dates[i]] = dailyDatasets[i];\n    }\n    \n    let index = dates.length-1;\n    index = 0;\n    const data_day = data[dates[index]];\n\n    await this.setState({data:data, dates:dates, current_date:dates[index], current_date_index:index, data_day:data_day, model:initialModel, mapGeometries:fetched[1]});\n  }\n  render() {\n    return  <div ref={this._setRef.bind(this)}>\n              {this.state.data &&\n                <PixiViz\n                  data={this.state.data_day.reverse()}\n                  model={this.state.model}\n                  mapGeometries={this.state.mapGeometries}\n                  play={this.state.play}\n                  current_date_index={this.state.current_date_index}\n                  changeDate={this.changeDate}\n                  unique_IDS = {this.state.unique_IDS}\n                />\n              }\n              <header style={{position:'fixed',top:0}}>\n                <p>\n                  <input type=\"button\" name=\"prev-date\" value=\"⏪\" onClick={ ()=>this.changeDate(this.state.current_date_index-1) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"▶️\" onClick={ ()=>this.setState({play:!this.state.play}, this.changeDate(this.state.current_date_index+1)) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"⏩\" onClick={ ()=>this.changeDate(this.state.current_date_index+1) } />\n                  <input type=\"button\" name=\"bands\" value=\"🖼\" onClick={ ()=>this.changeModel('stripes') } />\n                  <input type=\"button\" name=\"bunch\" value=\"💐\" onClick={ ()=>this.changeModel('bunches') } />\n                  <input type=\"button\" name=\"clusters\" value=\"🎯\" onClick={ ()=>this.changeModel('clusters') } />\n                  {this.state.current_date}\n                </p>\n              </header>\n            </div>;\n  }\n}\n\nexport default VizView;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\n// https://github.com/gpujs/gpu.js\nimport { GPU } from 'gpu.js';\nconst gpu = new GPU();\n\nconst dpr = window.devicePixelRatio || 1;\nconst amount = 200000;\nlet test_with_gpu = false;\n\nclass PIXIPerformancesTest extends Component {\n\n  componentDidMount(){\n    const width = window.innerWidth / dpr;\n    const height = window.innerHeight / dpr;\n\n    let ticker = PIXI.Ticker.shared;\n    ticker.stop();\n\n    const app = new PIXI.Application({\n      autoStart:false,\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      sharedTicker: false\n    });\n    this._rootNode.appendChild(app.view);\n\n    const viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    app.stage.addChild(viewport);\n\n    const container = new PIXI.ParticleContainer(amount, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n\n    viewport.addChild(container);\n\n    const textures = []\n    \n    app.loader.add('sprites', './flowers-textures-1.png');\n    app.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    app.loader.onComplete.add(async ()=>{\n      console.log('loader completed')\n      const baseTexture = app.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-1.json');\n\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures.push(texture);\n      }\n\n      let flowers_matrix = [\n        // [x, y, speedX, speedY]\n      ];\n\n      const x_flowers = [];\n      const speed_x_flowers = [];\n\n      for (let i=0; i<amount; ++i) {\n        const index_texture = i%5;\n        const sprite = new Flower(textures[index_texture]);\n\n        const x = width*Math.random();\n        const y = height*Math.random();\n        const speedX = (-0.5 + Math.random());\n        const speedY = (-0.5 + Math.random());\n        \n        sprite.x = x;\n        sprite.y = y;\n        sprite.speedX = speedX;\n        sprite.speedY = speedY;\n\n        const flower = [x,y,speedX,speedY];\n        flowers_matrix.push(flower);\n        \n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        sprite.scale.x = 1/2/2/2;\n        sprite.scale.y = 1/2/2/2;\n  \n        container.addChild(sprite);\n      }\n\n      // console.log('flowers matrix', flowers_matrix);\n\n      const kernel = gpu.createKernel(function(arr,box) {\n        let speed_x = arr[this.thread.x][2];\n        let new_x = arr[this.thread.x][0] + speed_x;\n        if (new_x < 0) {\n          new_x = 0;\n          speed_x *= -1\n        } else if (new_x > box[0]) {\n          new_x = box[0];\n          speed_x *= -1\n        }\n        \n        let speed_y = arr[this.thread.x][3];\n        let new_y = arr[this.thread.x][1] + speed_y;\n        if (new_y < 0) {\n          new_y = 0;\n          speed_y *= -1\n        } else if (new_y > box[1]) {\n          new_y = box[1];\n          speed_y *= -1\n        }\n\n        return [new_x, new_y, speed_x, speed_y];\n      }).setOutput([amount]);\n\n      let counter = 0;\n      const update = function () {          \n        if (counter < 1000 || true) {\n          counter++;\n          if (test_with_gpu) {\n            flowers_matrix = kernel(flowers_matrix, [width, height]);\n            // console.log('kernel result',flowers_matrix[0][0]);\n          }\n          for (var i = 0; i < amount; i++) \n          {\n            var sprite = container.children[i];\n\n            if (test_with_gpu) {\n              sprite.x = flowers_matrix[i][0];\n              sprite.y = flowers_matrix[i][1];\n            } else {\n              // x\n              sprite.x += sprite.speedX;\n              if (sprite.x > width)\n              {\n                sprite.speedX *= -1;\n                sprite.x = width;\n              }\n              else if (sprite.x < 0)\n              {\n                sprite.speedX *= -1;\n                sprite.x = 0;\n              }\n              // y\n              sprite.y += sprite.speedY;\n              if (sprite.y > height)\n              {\n                sprite.speedY *= -1;\n                sprite.y = height;\n              }\n              else if (sprite.y < 0)\n              {\n                sprite.speedY *= -1;\n                sprite.y = 0;\n              }\n            }\n          }\n        };\n        \n        app.renderer.render(viewport);\n        requestAnimationFrame(update);\n      }\n      update();\n\n    })\n    app.loader.load();\n  }\n  \n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  render() {\n    return <div ref={this._setRef.bind(this)}></div>;\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint; \n  }\n}\n\nexport default PIXIPerformancesTest;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Visualization from '../Visualization/Visualization';\n\nclass Italy extends Component {\n  constructor(props) {\n    super(props);\n    this.state={};\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  async componentDidMount(){\n    const fetched = await Promise.all([\n      d3.csv('./data/italy/datasets.csv'),\n      d3.json('./data/world-50m.json')\n    ]);\n    const datasets = await Promise.all(fetched[0].map(d=>d3.csv('./data/italy/'+d.file_name)));\n    const data = {};\n    fetched[0].map(d=>d.date).forEach((date,i)=>{\n      data[date] = datasets[i];\n    })\n    const topojson = fetched[1];\n    this.setState({data:data,topojson:topojson});\n  }\n  render() {\n    return <div className=\"italy\" ref={this._setRef.bind(this)}>\n      {!this.state.data && <div>Loading data...</div>}\n      {this.state.data && <Visualization data={this.state.data} topojson={this.state.topojson} country_info={country_info}/>}\n    </div>;\n  }\n}\nexport default Italy;\n\nconst country_info = {\n  'country_code':'380',\n  'regions_codes':{\n    '13':'Abruzzo',\n    '17':'Basilicata',\n    '18':'Calabria',\n    '15':'Campania',\n    '08':'Emilia-Romagna',\n    '06':'Friuli Venezia Giulia',\n    '12':'Lazio',\n    '07':'Liguria',\n    '03':'Lombardia',\n    '11':'Marche',\n    '14':'Molise',\n    '01':'Piemonte',\n    '16':'Puglia',\n    '20':'Sardegna',\n    '19':'Sicilia',\n    '09':'Toscana',\n    '04':'Trentino-Alto Adige',\n    '10':'Umbria',\n    '02':'Valle d\\'Aosta',\n    '05':'Veneto'\n  },\n  'categories_codes':{\n    \"1\":\"deceased\",\n    \"2\":\"intensive_cares\",\n    \"3\":\"hospitalized\",\n    \"4\":\"home_isolation\",\n    \"5\":\"recovered\"\n  }\n};","import React from 'react';\nimport { HashRouter, Route, Link, useParams } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\nimport VizView from './VizView';\nimport PIXIPerformancesTest from './PIXIPerformancesTest';\nimport Italy from './Italy';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/performances\">Testing PIXIjs performances</Link>\n                </li>\n                <li>\n                  <Link to=\"/viz\">Visualization</Link>\n                </li>\n                <li>\n                  <Link to=\"/italy\">Italy</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n        <Route path=\"/viz\">\n          <VizView />\n        </Route>\n        <Route path=\"/performances\">\n          <PIXIPerformancesTest />\n        </Route>\n        <Route path=\"/italy\">\n          <Italy />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}