{"version":3,"sources":["Test/Test.js","PixiViz/PixiViz.js","Visualization/Visualization.js","Utilities/Utilities.js","VizView/VizView.js","PIXIPerformancesTest/PIXIPerformancesTest.js","Italy/Italy.js","App.js","serviceWorker.js","index.js"],"names":["country","region","width","height","app","viewport","flowersContainer","geography","regionsInfo","textures","available_dates","Utilities","size","minScale","maxScale","scale","t","regions_coordinates","categories","categories_codes","regions","d3","stop","projection","path","radius","exponent","color","Test","props","componentNode","this","_rootNode","flowers_simulations","shuffle","a","i","length","j","Math","floor","random","date","filter","d","denominazione_regione","forEach","regional_flowers","flowers","id","toString","substring","code","console","log","regional_links","links","source","regional_simulation","force","distance","strength","iterations","on","document","title","alpha","flower","each","r2","hypot","x","y","r","selected_day","find","cosi","tangent","angle2","atan","newX","cos","newY","sin","attr","alphaMin","f","bunches_x","bunches_y","restart","clusters_x","clusters_y","g_flowers","append","selectAll","data","enter","classed","style","svg","g","zoom","transform","call","topoWorld","world","topojson","objects","countries","italy","features","fitExtent","exit","remove","merge","csv","range","domain","Number","totale_casi","dataByDates","key","entries","data_regions","values","trentino_elements","codice_regione","trentino","stato","lat","long","ricoverati_con_sintomi","terapia_intensiva","totale_ospedalizzati","isolamento_domiciliare","totale_positivi","variazione_totale_positivi","nuovi_positivi","dimessi_guariti","deceduti","tamponi","note_it","note_en","index_of_bolzano","indexOf","splice","index_of_trento","push","total","center_x","region_name","lon","center_y","point","Object","keys","category","o","padStart","ii","link","target","ref","_setRef","bind","backgroundColor","Component","dpr","window","devicePixelRatio","updateQueue","prevTime","PixiViz","translate","map","center","state","viewBuffer","innerWidth","innerHeight","amount","unique_IDS","PIXI","resolution","powerPreference","appendChild","view","Viewport","passiveWheel","stopPropagation","divWheel","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","drag","pressDrag","clampWheel","pinch","wheel","stage","addChild","container","vertices","position","rotation","uvs","tint","loader","add","onProgress","e","progress","onComplete","baseTexture","resources","sprites","texture","texture_name","flowers_textures_info","frames","frame","w","h","replace","entity","tempSpritesList","sprite","Flower","anchor","ViewBuffer","setDrawList","model","drawObjects","Date","now","update","deltaTime","render","requestAnimationFrame","load","prevProps","clearObjects","startAnimation","Sprites","master","drawList","animationTime","timeLeft","removeChildren","setLastPoint","setNextPoint","animate","delta","pop","currentTime","easeInOutCubic","moveToNextPoint","nextPoint","lastPoint","VizView","play","changeDate","index","dates","newDate","setState","current_date","current_date_index","data_day","newModel","Promise","all","fetched","file_name","dailyDatasets","elm","origin_x","origin_y","mapGeometries","reverse","top","type","name","value","onClick","changeModel","gpu","GPU","PIXIPerformancesTest","shared","autoStart","sharedTicker","flowers_matrix","speedX","speedY","createKernel","arr","box","speed_x","thread","new_x","speed_y","new_y","setOutput","counter","children","Visualization","unique_IDS_dictionary","autoDensity","antialias","querySelector","clampZoom","country_info","country_code","feature","this_graphic","context","beginFill","lineStyle","endFill","renderable","flowersTextures","flower_id","scaleValues","orig","day","day_index","rescaleObjects","_x","prevState","drawRegionsInfo","margin","k","drawCircle","text","fontFamily","fontSize","fill","align","originalScale","Italy","datasets","datasets_regions","className","App","basename","exact","to","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebc182bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\nimport FileSaver from 'file-saver';\nimport Utilities from '../Utilities/Utilities';\n\n// const data_url = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';\nconst data_url = './data/dpc-covid19-ita-regioni.csv';\n\n\nconst regions_coordinates = [\n  {\n      \"region_name\": \"Abruzzo\",\n      \"lat\": \"42.216666666667\",\n      \"lon\": \"13.833333333333\",\n  },\n  {\n      \"region_name\": \"Valle d'Aosta\",\n      \"lat\": \"45.716666666667\",\n      \"lon\": \"7.3666666666667\",\n  },\n  {\n      \"region_name\": \"Puglia\",\n      \"lat\": \"41.008611111111\",\n      \"lon\": \"16.512777777778\",\n  },\n  {\n      \"region_name\": \"Basilicata\",\n      \"lat\": \"40.5\",\n      \"lon\": \"16.5\",\n  },\n  {\n      \"region_name\": \"Calabria\",\n      \"lat\": \"39\",\n      \"lon\": \"16.5\",\n  },\n  {\n      \"region_name\": \"Campania\",\n      \"lat\": \"40.75\",\n      \"lon\": \"14.783333333333\",\n  },\n  {\n      \"region_name\": \"Emilia-Romagna\",\n      \"lat\": \"44.75\",\n      \"lon\": \"11\",\n  },\n  {\n      \"region_name\": \"Friuli Venezia Giulia\",\n      \"lat\": \"46.1\",\n      \"lon\": \"13.116666666667\",\n  },\n  {\n      \"region_name\": \"Lazio\",\n      \"lat\": \"41.9\",\n      \"lon\": \"12.716666666667\",\n  },\n  {\n      \"region_name\": \"Liguria\",\n      \"lat\": \"44.45\",\n      \"lon\": \"8.7666666666667\",\n  },\n  {\n      \"region_name\": \"Lombardia\",\n      \"lat\": \"45.65\",\n      \"lon\": \"9.95\",\n  },\n  {\n      \"region_name\": \"Marche\",\n      \"lat\": \"43.316666666667\",\n      \"lon\": \"13\",\n  },\n  {\n      \"region_name\": \"Molise\",\n      \"lat\": \"41.6997\",\n      \"lon\": \"14.6111\",\n  },\n  {\n      \"region_name\": \"Piemonte\",\n      \"lat\": \"45.25\",\n      \"lon\": \"7.9166666666667\",\n  },\n  {\n      \"region_name\": \"Sardegna\",\n      \"lat\": \"40.05\",\n      \"lon\": \"9.0833333333333\",\n  },\n  {\n      \"region_name\": \"Sicilia\",\n      \"lat\": \"37.599958333333\",\n      \"lon\": \"14.015377777778\",\n  },\n  {\n      \"region_name\": \"Trentino-Alto Adige\",\n      \"lat\": \"46.383333333333\",\n      \"lon\": \"11.416666666667\",\n  },\n  {\n      \"region_name\": \"Toscana\",\n      \"lat\": \"43.35\",\n      \"lon\": \"11.016666666667\",\n  },\n  {\n      \"region_name\": \"Umbria\",\n      \"lat\": \"42.983333333333\",\n      \"lon\": \"12.566666666667\",\n  },\n  {\n      \"region_name\": \"Veneto\",\n      \"lat\": \"45.733333333333\",\n      \"lon\": \"11.85\",\n  }\n];\n\nconst categories = {\n  \"deceduti\":\"deceased\",\n  \"terapia_intensiva\":\"intensive_cares\",\n  \"ricoverati_con_sintomi\":\"hospitalized\",\n  \"isolamento_domiciliare\":\"home_isolation\",\n  \"dimessi_guariti\":\"recovered\"\n};\n\nconst categories_codes = {\n  \"deceduti\":\"1\",\n  \"terapia_intensiva\":\"2\",\n  \"ricoverati_con_sintomi\":\"3\",\n  \"isolamento_domiciliare\":\"4\",\n  \"dimessi_guariti\":\"5\"\n};\n\nconst simulation = d3.forceSimulation().stop();\n\nlet countries = [], country,\n    regions = {}, region,\n    nodes = [], node,\n    projection = d3.geoNaturalEarth1(),\n    path = d3.geoPath().projection(projection);\n\nlet radius = d3.scalePow()\n  .exponent(0.5);\nlet color = d3.scaleOrdinal(d3.schemeCategory10);\n\nclass Test extends Component {\n  constructor(props){\n    super(props);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n\n  async componentDidMount() {\n    const svg = d3.select(this._rootNode);\n    const g = svg.append('g');\n    const zoom = d3.zoom().on(\"zoom\", ()=>{g.attr(\"transform\", d3.event.transform);});\n    \n    svg.call(zoom);\n    // svg.call(zoom.transform, d3.zoomIdentity\n    //   .translate(-1170, -1272)\n    //   .scale(7)\n    // );\n\n    const topoWorld = await d3.json('./data/world-50m.json');\n    // contries codes https://en.wikipedia.org/wiki/ISO_3166-1_numeric\n    let world = topojson.feature(topoWorld, topoWorld.objects.countries);\n    const italy = world.features.find(d=>d.id==='380') // this is italy\n    projection.fitExtent([[5,5],[768-10,1024-10]], italy)\n    // projection.scale(10000)\n    country = g.append('g').attr('class','countries').selectAll('.country');\n\n    country = country.data(world.features);\n    country.exit().remove();\n    country.enter().append('path')\n        .classed('country', true)\n        .merge(country)\n        .attr('d', path)\n        .attr('fill','#fafafa')\n        .attr('stroke','#eef3bd')\n        .attr('stroke-width','0.5px');\n\n    const csv = await d3.csv(data_url);\n    radius.range([0,70]).domain([0,d3.max(csv, d=>Number(d.totale_casi))]);\n\n    // radius.range([0,35]).domain([0,d3.max(regions[selected_day], d=>d.total)]);\n    let flowers = {};\n    let links = {};\n    let dataByDates = d3.nest()\n      .key(d=>d.data)\n      .entries(csv);\n\n    let selected_day\n    selected_day = '2020-02-24T18:00:00';\n    selected_day = '2020-03-10T18:00:00';\n    // selected_day = '2020-03-20T17:00:00';\n    // selected_day = '2020-03-29T17:00:00';\n    // selected_day = '2020-03-31T17:00:00';\n\n    dataByDates = dataByDates.filter(d=>d.key===selected_day)\n\n    dataByDates.forEach(date=>{\n      console.log(date)\n      flowers[date.key] = [];\n      links[date.key] = [];\n      regions[date.key] = [];\n      let data_regions = date.values//.filter(d=>d.denominazione_regione==='Piemonte'||d.denominazione_regione==='Lombardia');\n      let trentino_elements = data_regions.filter(d=>d.codice_regione===\"04\") // Bolzano and Trento are different elements with same region code\n      const trentino = {\n        data: date.key,\n        stato: \"ITA\",\n        codice_regione: \"04\",\n        denominazione_regione: \"Trentino-Alto Adige\",\n        lat: \"46.49933453\",\n        long: \"11.35662422\",\n        ricoverati_con_sintomi: Number(trentino_elements[0].ricoverati_con_sintomi) + Number(trentino_elements[1].ricoverati_con_sintomi),\n        terapia_intensiva: Number(trentino_elements[0].terapia_intensiva) + Number(trentino_elements[1].terapia_intensiva),\n        totale_ospedalizzati: Number(trentino_elements[0].totale_ospedalizzati) + Number(trentino_elements[1].totale_ospedalizzati),\n        isolamento_domiciliare: Number(trentino_elements[0].isolamento_domiciliare) + Number(trentino_elements[1].isolamento_domiciliare),\n        totale_positivi: Number(trentino_elements[0].totale_positivi) + Number(trentino_elements[1].totale_positivi),\n        variazione_totale_positivi: Number(trentino_elements[0].variazione_totale_positivi) + Number(trentino_elements[1].variazione_totale_positivi),\n        nuovi_positivi: Number(trentino_elements[0].nuovi_positivi) + Number(trentino_elements[1].nuovi_positivi),\n        dimessi_guariti: Number(trentino_elements[0].dimessi_guariti) + Number(trentino_elements[1].dimessi_guariti),\n        deceduti: Number(trentino_elements[0].deceduti) + Number(trentino_elements[1].deceduti),\n        totale_casi: Number(trentino_elements[0].totale_casi) + Number(trentino_elements[1].totale_casi),\n        tamponi: Number(trentino_elements[0].tamponi) + Number(trentino_elements[1].tamponi),\n        note_it: \"\",\n        note_en: \"\"\n      };\n      const index_of_bolzano = data_regions.indexOf(trentino_elements[0]);\n      data_regions.splice(index_of_bolzano,1);\n      const index_of_trento = data_regions.indexOf(trentino_elements[1]);\n      data_regions.splice(index_of_trento,1);\n      data_regions.push(trentino);\n      data_regions.forEach(region=>{\n        // if(date.key===selected_day) {\n        //   console.log(region);\n        // };\n        region.code = region.codice_regione;\n        region.total = region.totale_casi;\n        region.center_x = regions_coordinates.find(d=>d.region_name === region.denominazione_regione).lon;\n        region.center_y = regions_coordinates.find(d=>d.region_name === region.denominazione_regione).lat;\n        region.r = radius(Number(region.total));\n        const point = projection([region.center_x,region.center_y]);\n        region.x = point[0];\n        region.y = point[1];\n        delete region.data;\n        delete region.codice_regione;\n        delete region.stato;\n        delete region.lat;\n        delete region.long;\n        delete region.totale_casi;\n        delete region.totale_ospedalizzati;\n        delete region.totale_positivi;\n        delete region.variazione_totale_positivi;\n        delete region.nuovi_positivi;\n        delete region.tamponi;\n        delete region.note_it;\n        delete region.note_en;\n        regions[date.key].push(region);\n        Object.keys(categories).forEach(category=>{\n          for (let i=0; i<region[category]; ++i){\n            const o = { id: region.code.toString()+''+categories_codes[category]+''+i.toString().padStart(6,\"0\") };\n            flowers[date.key].push(o);\n            if (i===0) {\n              for (let ii=1; ii<Number(categories_codes[category]); ++ii){\n                const link = {\n                  source: region.code.toString()+''+ii+''+'0'.toString().padStart(6,\"0\"),\n                  target: o.id\n                }\n                links[date.key].push(link);\n              }\n            }\n            else {\n              const link = {\n                source: region.code.toString()+''+categories_codes[category]+''+'0'.toString().padStart(6,\"0\"),\n                target: o.id\n              }\n              links[date.key].push(link);\n            }\n          }\n        })\n      })\n      // if(date.key===selected_day) {\n      //   console.log(flowers[date.key]);\n      //   console.log(links[date.key]);\n      // };\n    });\n\n    region = g.selectAll('.region');\n    region = region.data(regions[selected_day], d=>d.code)\n      .enter().append('circle')\n        .attr('class',d=>d.denominazione_regione)\n        .attr('fill','white')\n        .attr('stroke','#cccccc')\n        .classed('region',true)\n        .attr('r', d=>radius(+d.total));\n\n    const simulation_regions = d3.forceSimulation(regions[selected_day])\n      .force('x', d3.forceX(d=>d.x))\n      .force('y', d3.forceY(d=>d.y))\n      .force('collision', d3.forceCollide(d=>radius(d.total)))\n      .on('tick', ()=>{\n        region.attr('cx',d=>d.x)\n          .attr('cy',d=>d.y);\n      })\n      .on('end',()=>{\n        flowers_simulations(selected_day);\n      })\n      .alpha(1)\n      .restart();\n    \n    let g_flowers = g.append('g').classed('flowers', true);\n\n    function flowers_simulations(date) {\n      regions[date]\n      .filter(d=>d.denominazione_regione==='Lombardia')\n      .forEach(region=>{\n        let regional_flowers = flowers[date].filter(d=>d.id.toString().substring(0,2)===region.code);\n        // regional_flowers = regional_flowers.slice(0,30);\n        console.log(regional_flowers.length);\n        // .filter(d=>d.denominazione_regione==='Lombardia')\n        shuffle(regional_flowers);\n        const regional_links = links[date].filter(d=>d.source.toString().substring(0,2)===region.code);\n        // console.log(regional_flowers)\n        // console.log(regional_links)\n\n        const regional_simulation = d3.forceSimulation(regional_flowers)\n          .force('center', d3.forceCenter(0,0))\n          .force('links', d3.forceLink([]).id(d=>d.id).distance(0).strength(0.01).iterations(8))\n          .force('charge', d3.forceManyBody().strength(-0.01))\n          .force('collision', d3.forceCollide(0.35).strength(1))\n          .force('x', d3.forceX())\n          .force('y', d3.forceY())\n          .on('tick',()=>{\n            document.title = regional_simulation.alpha();\n            flower.each((d,i)=>{\n                const r2 = Math.hypot(d.x,d.y);\n                const r = regions[selected_day].find(r=>r.code===d.id.substring(0,2)).r\n                if (r2>r){\n                  let sine = d.y/r2;\n                  let cosi = d.x/r2;\n                  let tangent = d.y / d.x;\n                  let angle2 = Math.atan(tangent);\n                  let newX = Math.cos(angle2) * r;\n                  let newY = Math.sin(angle2) * r;\n                  if (cosi<0){\n                    newX*=-1;\n                    newY*=-1;\n                  }\n                  d.x = newX;\n                  d.y = newY;\n                }\n              })\n              .attr('cx',d=>d.x)\n              .attr('cy',d=>d.y);\n          })\n          .alphaMin(0.01)\n          .on('end',()=>{\n            console.log(region.denominazione_regione, 'simulation ended')\n            flower.attr('cx',d=>d.x)\n                  .attr('cy',d=>d.y);\n            regional_flowers.forEach(f=>{\n              f.bunches_x = f.x;\n              f.bunches_y = f.y;\n            })\n            regional_simulation.force('links').links(regional_links);\n            regional_simulation\n              .alpha(1)\n              .restart()\n              // .on('tick',()=>{\n              //   document.title = regional_simulation.alpha();\n              //   flower\n              //     .attr('cx',d=>d.x)\n              //     .attr('cy',d=>d.y);\n              // })\n              .on('end',()=>{\n                document.title = 'simulation ended';\n                flower.attr('cx',d=>d.x)\n                  .attr('cy',d=>d.y);\n                regional_flowers.forEach(f=>{\n                  f.clusters_x = f.x;\n                  f.clusters_y = f.y;\n                });\n                console.log(region.denominazione_regione, 'simulation clusters ended')\n              });\n          });\n        \n        let flower = g_flowers.append('g').attr('transform','translate('+region.x+','+region.y+')').attr('class',region.code).selectAll('.flower');\n        flower = flower.data(regional_flowers, d=>d.id).enter().append('circle')\n          .classed('flower', true)\n          .attr('r', 0.5)\n          .attr('fill', d=>color(d.id.toString().substring(2,4)))\n          .style('opacity',.7)\n          .attr('cx', region.x)\n          .attr('cy', region.y);\n      })\n    }\n\n    /**\n     * Shuffles array in place. ES6 version\n     * @param {Array} a items An array containing the items.\n     */\n    function shuffle(a) {\n      for (let i = a.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [a[i], a[j]] = [a[j], a[i]];\n      }\n      return a;\n    }\n\n    // .then(csv=>{\n\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Sicilia'||d.denominazione_regione===\"Valle d'Aosta\"||d.denominazione_regione===\"Lazio\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lombardia'||d.denominazione_regione===\"Piemonte\"||d.denominazione_regione===\"Emilia Romagna\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lazio'||d.denominazione_regione===\"Abruzzo\"||d.denominazione_regione===\"Umbria\")\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Lombardia')\n    //   // csv = csv.filter(d=>d.denominazione_regione==='Piemonte')\n\n    //   const dataByDates = d3.nest()\n    //     .key(d=>d.data)\n    //     .entries(csv);\n\n    //   console.log(dataByDates);\n      \n    //   const data = {};\n\n    //   // generating data\n    //   dataByDates.forEach(date=>{\n\n    //     const this_date = date.key\n    //     const raw_data = date.values;\n    //     raw_data.forEach(r=>{\n    //       const point = projection([r.long,r.lat]);\n    //       r.x = point[0];\n    //       r.y = point[1];\n    //     })\n\n    //     data[this_date] = [];\n\n    //     raw_data.forEach((region,i)=>{\n    //       Utilities.categories.forEach((c)=>{\n    //         for (let ii=0; ii<region[c]; ++ii){\n    //           const obj={\n    //             'id': region.denominazione_regione + '-' + c + '-' + ii+1,\n    //             'category': c,\n    //             'denominazione_regione': region.denominazione_regione,\n    //             'date': region.data,\n    //             '_x': region.x,\n    //             '_y': region.y,\n    //             'x': region.x,\n    //             'y': region.y\n    //           }\n    //           data[this_date].push(obj);\n    //         }\n    //       })\n    //     })\n\n    //   })\n      \n    //   this.setState({data:data}, ()=>{\n\n    //     const svg = d3.select(this._rootNode);\n    //     const g = svg.append('g');\n        \n    //     function zoomed() {\n    //       g.attr(\"transform\", d3.event.transform);\n    //     }\n  \n    //     const zoom = d3.zoom()\n    //       .extent([[0, 0], [window.innerWidth, window.innerHeight]])\n    //       .scaleExtent([Utilities.clampZoomOptions.minScale, Utilities.clampZoomOptions.maxScale*2])\n    //       .on(\"zoom\", zoomed);\n        \n    //     svg.call(zoom);\n    //     svg.call(zoom.transform, d3.zoomIdentity\n    //         .translate(-5, -340)\n    //         .scale(5)\n    //       );\n        \n    //     node = g.selectAll('text')\n    //     simulation.nodes(nodes)\n    //       .tick(1000)\n    //       .on(\"tick\", ()=>{\n    //         document.title = simulation.alpha();\n    //         node.attr('x',d=>d.x).attr('y',d=>d.y);\n    //       })\n    //       .force(\"x\", d3.forceX(d=>d._x))\n    //       .force(\"y\", d3.forceY(d=>d._y))\n    //       .force(\"charge\", d3.forceManyBody().strength(-0.05))\n    //       .alphaDecay(0.1)\n    //       .alphaMin(0.1)\n\n    //       let dates = Object.keys(this.state.data);\n\n    //       dates = dates.slice(0,5);\n          \n    //       const runAllDates = ()=>{\n    //         let date = dates.shift();\n    //         console.log(date);\n    //         let data_to_use = this.state.data[date];\n    //         console.log(data_to_use);\n\n    //         categories = JSON.parse(JSON.stringify(Utilities.categories));\n    //         nodes = addNodes(nodes, data_to_use, categories.shift());\n    //         updateForceLayout();\n\n    //         simulation.force(\"collision\", null)\n\n    //         simulation.on(\"end\", () => {\n    //           document.title = 'simulation ended';\n    //           if (categories.length>0) {\n    //             nodes = addNodes(nodes, data_to_use, categories.shift());\n    //             updateForceLayout();\n    //           } else {\n    //             document.title = 'running anticollision';\n    //             console.log('running anticollision');\n\n    //             simulation.force(\"collision\",\n    //               d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n    //                 .strength(0.1)\n    //             );\n\n    //             simulation\n    //               .alpha(1)\n    //               .restart()\n    //               .on('end',()=>{\n    //                 console.log('done anticollision, missing', dates.length)\n    //                 if (dates.length>0) {\n    //                   nodes.forEach(n=>{\n    //                     delete n.x;\n    //                     delete n.y;\n    //                     delete n.index;\n    //                     delete n.vx;\n    //                     delete n.vy;\n    //                     delete n.fx;\n    //                     delete n.fy;\n    //                   })\n    //                   nodes = [];\n    //                   runAllDates();\n    //                 } else {\n    //                   downloadSpatializedData(this.state.data)\n    //                 }\n    //               });\n    //           }\n    //         })\n    //       }\n    //       runAllDates();\n    //   })\n    // })\n  }\n  render() {\n    return <svg ref={this._setRef.bind(this)} style={{ width:'768px', height:'1024px', backgroundColor:'#eef3bd'}}></svg>;\n  }\n}\n\nexport default Test;\n\n// const addNodes = (nodes, data, category)=>{\n//   nodes.forEach(n=>{\n//     n.fx=n.x;\n//     n.fy=n.y\n//   })\n//   const newNodes = data.filter(d=>d.category===category);\n//   const a = 360/newNodes.length * 20;\n//   const r = Math.sqrt((newNodes.length+nodes.length)/Math.PI)*2;\n//   newNodes.forEach((d,i)=>{\n//     d.x=d._x + Math.cos(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n//     d.y=d._y + Math.sin(Math.PI/180*i*a) * (r+i/80) + d3.randomUniform(-5,5)();\n//   })\n//   return nodes.concat(newNodes);\n// }\n\n// const updateForceLayout = () => {\n//   node = node.data(nodes, d=>d.id)\n//   node.exit().remove();\n\n//   node = node.enter().append('text')\n//     .classed('node', true)\n//     .attr('font-size',size+'px')\n//     .text(d=>Utilities.emoji_dictionary[d.category])\n//     .attr('x',d=>d.x)\n//     .attr('y',d=>d.y)\n//     .call(d3.drag()\n//           .on(\"start\", dragstarted)\n//           .on(\"drag\", dragged)\n//           .on(\"end\", dragended))\n//     .merge(node);\n\n//   simulation.nodes(nodes)\n//     .alpha(1)\n//     .restart();\n// }\n\n// function dragstarted(d) {\n//   if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n//   d.fx = d.x;\n//   d.fy = d.y;\n// }\n\n// function dragged(d) {\n//   d.fx = d3.event.x;\n//   d.fy = d3.event.y;\n// }\n\n// function dragended(d) {\n//   if (!d3.event.active) simulation.alphaTarget(0);\n//   d.fx = null;\n//   d.fy = null;\n// }\n\n// function downloadSpatializedData(data) {\n//   // for (let i=0; i<data.length; ++i){\n//   //   data[i]._x = data[i].x;\n//   //   data[i]._y = data[i].y;\n//   //   delete data[i].index;\n//   //   delete data[i].vx;\n//   //   delete data[i].vy;\n//   //   delete data[i].x;\n//   //   delete data[i].y;\n//   // }\n//   var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n//   FileSaver.saveAs(blob, \"covi-z-storico.json\");\n// }\n\n// spatialization()\n// function spatialization() {\n//   if (simulationIsRunning) {\n//     document.title = 'a = ' + simulation.alpha();\n//     // node\n//     //   .attr('x',d=>d.x)\n//     //   .attr('y',d=>d.y);\n//     requestAnimationFrame(spatialization)\n//   }\n// }\n\n// node = node.data(nodes, (d,i)=>'node-'+i).enter().append('text').merge(node)\n//   .attr('font-size',size+'px')\n//   .text(d=>Utilities.emoji_dictionary[d.category])\n//   .attr('x',d=>d.x)\n//   .attr('y',d=>d.y);\n\n// for (let i=0; i<data.length; ++i){\n//   data[i]._x = data[i].x;\n//   data[i]._y = data[i].y;\n//   delete data[i].index;\n//   delete data[i].vx;\n//   delete data[i].vy;\n//   delete data[i].x;\n//   delete data[i].y;\n// }\n// var blob = new Blob([JSON.stringify(data)], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"covi-z.json\");\n\n\n    // projection = d3.geoConicEqualArea()\n    //     .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n    //     .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n    //     .scale(Utilities.map.scale)\n    //     .center([12.368775000000001, 42.9451139]);\n\n\n\n    // document.addEventListener('keypress', (e)=>{\n    //   if (e.key==='r'){\n    //     simulation.alpha(1).restart();\n    //   } else if (e.key==='\\\\'){\n    //     simulation.alpha(0.00001).restart();\n    //   } else if (e.key==='c' || e.keyCode===99){\n    //     nodes.forEach(n=>{\n    //       n.fx=null;\n    //       n.fy=null\n    //     })\n    //     simulation.force(\"collision\",\n    //       d3.forceCollide( (Utilities.emoji.size/Utilities.clampZoomOptions.maxScale/2)*0.9 )\n    //         .strength(0.1)\n    //     );\n    //     simulation\n    //       .alpha(1)\n    //       .restart();\n\n    //   } else if (e.key==='d') {\n    //     downloadSpatializedData(nodes);\n    //   }\n    // })","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\nimport Utilities from '../Utilities/Utilities';\n\nlet container,\n    dpr = window.devicePixelRatio || 1;\n\nlet width, height, app;\nlet updateQueue=[];\nlet prevTime=0;\n// const projection = d3.geoConicEqualArea()\n// const projection = d3.geoTransverseMercator()\nconst projection = d3.geoNaturalEarth1()\n  // .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n  .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n  .scale(Utilities.map.scale)\n  .center([12.368775000000001, 42.9451139]);\n\nclass PixiViz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {viewBuffer:null};\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n\n  componentDidMount(){\n    width = window.innerWidth / dpr;\n    height = window.innerHeight / dpr;\n    const amount=Object.keys(this.props.unique_IDS).length;\n    console.log(\"amount:\", amount);\n    //let ticker = PIXI.Ticker.shared;\n    //ticker.stop();\n\n    app = new PIXI.Application({\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      //sharedTicker: false,\n     // autoStart:false\n    });\n\n    this._rootNode.appendChild(app.view);\n\n    const viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    app.stage.addChild(viewport);\n\n    const container = new PIXI.ParticleContainer(amount, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n\n    viewport.addChild(container);\n\n    const textures = {};\n    \n    app.loader.add('sprites', './flowers-textures-ita-1.png');\n    app.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    app.loader.onComplete.add(async ()=>{\n      console.log('loader completed')\n      const baseTexture = app.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-ita-1.json');\n\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures[texture_name.replace('.png','')] = texture;\n      }\n      const tempSpritesList={};\n      for (const entity in this.props.unique_IDS) {\n        const sprite = new Flower(textures[this.props.unique_IDS[entity].category]);\n        sprite.x = Number(this.props.unique_IDS[entity].position.x);\n        sprite.y = Number(this.props.unique_IDS[entity].position.y);\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        sprite.scale.x = 1/2/2/2;\n        sprite.scale.y = 1/2/2/2;\n  \n        tempSpritesList[entity]=sprite;\n      }\n      this.state.viewBuffer = new ViewBuffer(tempSpritesList, container);\n      this.state.viewBuffer.setDrawList(this.props.data, this.props.model);\n      this.state.viewBuffer.drawObjects();\n      prevTime = Date.now();\n      const update = function () {    \n        const toSeconds=1000;\n        const deltaTime = (Date.now() - prevTime) / toSeconds;\n        prevTime = Date.now();\n        for(let i=0; i < updateQueue.length;++i)\n        {\n          updateQueue[i](deltaTime);\n        }      \n        app.renderer.render(viewport);\n        requestAnimationFrame(update);\n      }\n      update();\n\n    })\n    app.loader.load();\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.data !== this.props.data) {\n      //update draw list\n      this.state.viewBuffer.clearObjects();\n      this.state.viewBuffer.setDrawList(this.props.data, this.props.model);\n      this.state.viewBuffer.drawObjects();\n    } else if (prevProps.model !== this.props.model) {\n      //animate moveto see ViewBuffer startAnimation()\n      this.state.viewBuffer.model = this.props.model;\n      this.state.viewBuffer.startAnimation(5, app);\n    }\n    // console.log(container);\n  }\n  render() {\n    return <div style={{width:'100vw',height:'100vh'}} ref={this._setRef.bind(this)}></div>;\n  }\n}\n\n\nclass ViewBuffer{\n  /**\n   * \n   * @param {{id:Flower}} Sprites \n   * @param {PIXI.ParticleContainer} container\n   */\n  constructor(Sprites, container)\n  {\n    this.master=Sprites;\n    this.container = container;\n  }\n  master={};\n  drawList=[];\n  animationTime=0;\n  timeLeft=0;\n  app=null;\n  container=null;\n  model=null;\n  setDrawList(drawList, model){\n    this.drawList = drawList;\n    this.model = model;\n  }\n  clearObjects(){\n      this.container.removeChildren();\n  }\n  drawObjects(){\n    if(this.model === \"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.container.addChild(this.master[this.drawList[i].id]);\n      }\n      return;\n    }\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]);\n      this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.container.addChild(this.master[this.drawList[i].id]);\n    }\n  }\n  /**\n   * \n   * @param {Number} animationTime - in seconds \n   * @param {PIXI.Application} app \n   */\n  startAnimation(animationTime, app){\n    this.animationTime = animationTime;\n    this.timeLeft = 0;\n    this.app = app;\n    if(this.model===\"stripes\")\n    {\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]) * width;\n        point.y = Number(this.drawList[i][this.model+\"_y\"]) * height;\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    else{\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      let point = new PIXI.Point();\n      point.x = Number(this.drawList[i][this.model+\"_x\"]);\n      point.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.master[this.drawList[i].id].setLastPoint();\n      this.master[this.drawList[i].id].setNextPoint(point);\n    }\n  }\n    updateQueue.push(this.animate.bind(this));\n  }\n  animate(delta){\n    this.timeLeft += delta;\n    if(this.timeLeft >= this.animationTime)\n    {\n      updateQueue.pop();\n    }\n    else\n    {\n      const currentTime = Utilities.easeInOutCubic(this.timeLeft / this.animationTime);\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].moveToNextPoint(currentTime);\n      }\n    }\n\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint.x;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint.y; \n  }\n}\n\n\nexport default PixiViz;\n\n\n\n// loadData(){\n//   return Promise.all([\n//     d3.json('./data/covi-z.json'),\n//     d3.json('./data/regioni.geojson'),\n//   ])\n// }\n// initPixiApp() {\n//   this.loadData().then( files => {\n//     let data = files[0];\n//     let mapData = files[1];\n\n//     pixiApp = new PIXI.Application({\n//       width: width,\n//       height: height,\n//       backgroundColor: 0xfafafa,\n//       resolution: dpr,\n//       autoResize: true\n//     });\n//     this._rootNode.appendChild(pixiApp.view);\n\n//     // create viewport and add it to the stage\n//     viewport = new Viewport({\n//       center: new PIXI.Point(-width/2, -height/2),\n//       passiveWheel: false,\n//       stopPropagation: true,\n//       divWheel: this._rootNode,\n//       screenWidth: width,\n//       screenHeight: height,\n//       worldWidth: width,\n//       worldHeight: height,\n//       interaction: pixiApp.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n//     });\n//     viewport\n//       // .moveCenter(width/2,height/2)\n//       .clampZoom(Utilities.clampZoomOptions)\n//       .drag({pressDrag:true, clampWheel:true})\n//       .pinch()\n//       .wheel()\n//     pixiApp.stage.addChild(viewport);\n    \n//     // Draw Italy\n//     // adapted from https://gist.github.com/armollica/3598b8c89e1f18ea453231da41c7c3bc\n//     projection = d3.geoConicEqualArea()\n//       .fitSize([Utilities.map.width-50, Utilities.map.height-50], this._rootNode)\n//       .translate([Utilities.map.width / 2, Utilities.map.height / 2])\n//       .scale(Utilities.map.scale)\n//       .center([12.368775000000001, 42.9451139]);\n\n\n//     for (let i=0; i<mapData.features.length; i++) {\n//       const region = mapData.features[i];\n\n//       const this_graphics = new PIXI.Graphics();\n\n//       const path = d3.geoPath()\n//         .projection(projection)\n//         .context(this_graphics);\n\n//       this_graphics.beginFill(0xffffff, 1);\n//       this_graphics.lineStyle(0.25, 0xcccccc);\n//         path(region);\n//       this_graphics.endFill();\n\n//       viewport.addChild(this_graphics);\n//     }\n\n//     // Sprites for emoji\n//     container = new PIXI.Container();\n//     viewport.addChild(container);\n\n\n//   });\n// }\n// componentDidMount() {\n  \n// }\n// loadEmoji(){\n//   emojiCounter++;\n//   if (emojiCounter === Object.keys(Utilities.emoji_images_dictionary).length) {\n//     const icons = document.querySelectorAll('#textures-generation>*');\n//     const textures = {};\n//     for (let i=0; i<icons.length; ++i) {\n//       html2canvas(icons[i],{backgroundColor:null}).then((canvas)=>{\n//         textures[icons[i].id] = canvas.toDataURL(\"image/png\");\n//         if (Object.keys(textures).length === Object.keys(Utilities.emoji_dictionary).length) {\n//           this.setState({textures:textures},()=>{\n//             this.initPixiApp();\n//           })\n//         }\n//       });\n//     }\n//   }\n// }","import React, { Component } from 'react';\nimport * as PIXI from \"pixi.js\";\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport { Viewport } from \"pixi-viewport\";\nimport Utilities from '../Utilities/Utilities';\n\nlet app, viewport, flowersContainer, geography, regionsInfo, textures,\n    dpr=window.devicePixelRatio || 1,\n    width=window.innerWidth,\n    height=window.innerHeight,\n    available_dates,\n    projection = d3.geoNaturalEarth1(),\n    path = d3.geoPath(),\n    updateQueue=[],\n    prevTime=0;\n\nclass Visualization extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      'model':'bunches',\n      'viewBuffer':null,\n      'day':'none',\n      'day_index':-1\n    };\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  componentDidMount(){\n    // Handle unique IDS\n    const unique_IDS_dictionary = {};\n    available_dates = Object.keys(this.props.data);\n    available_dates.forEach(date=>{\n      for (let i=0; i<this.props.data[date].length; ++i){\n        const elm = this.props.data[date][i];\n        if (!(elm.id in unique_IDS_dictionary)){\n          // every ID is a string of 9 numbers:\n          // 121000001 > 12=code of region, 1=code of category, 000001=index\n          // the combination of those digits makes unique IDS\n          unique_IDS_dictionary[elm.id]={};\n        }\n      }\n    })\n    const unique_IDS = Object.keys(unique_IDS_dictionary);\n\n    // Init app\n    app = new PIXI.Application({\n      width: width,\n      height: height,\n      backgroundColor: 0xfafafa,\n      autoDensity:true,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      antialias:false,\n      sharedTicker: false,\n      autoStart:false\n    });\n    let ticker = PIXI.Ticker.shared;\n    ticker.stop();\n    this._rootNode.querySelector('#visualization').appendChild(app.view);\n\n    // Init viewport\n    viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction\n    });\n    viewport\n      .clampZoom({minScale:0.75,maxScale:5})\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel();\n    app.stage.addChild(viewport);\n\n    // Initialize containers\n    geography = new PIXI.Container();\n    viewport.addChild(geography);\n    const topoWorld = this.props.topojson;\n    // contries codes https://en.wikipedia.org/wiki/ISO_3166-1_numeric\n    let world = topojson.feature(topoWorld, topoWorld.objects.countries);\n    const country = world.features.find(d=>d.id===this.props.country_info.country_code)\n    projection.fitExtent([[5,5],[768-10,1024-10]], country);\n    world.features.filter(d=>d.id===this.props.country_info.country_code).forEach(feature=>{\n      const this_graphic = new PIXI.Graphics();\n      path.projection(projection).context(this_graphic);\n      this_graphic.beginFill(0xdfffd6, 1);\n      this_graphic.lineStyle(1, 0xfafafa, 0.5);\n      path(feature);\n      this_graphic.endFill();\n      geography.addChild(this_graphic);\n    });\n    regionsInfo = new PIXI.Container();\n    regionsInfo.renderable=false;\n    viewport.addChild(regionsInfo);\n    flowersContainer = new PIXI.ParticleContainer(unique_IDS.length, {\n      scale:true,\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n    // flowersContainer.renderable=false;\n    viewport.addChild(flowersContainer);\n\n    app.loader.add('flowersTextures','./flowers-textures-1.json');\n    app.loader.onComplete.add(()=>{\n        textures = app.loader.resources.flowersTextures.textures;\n        const tempSpritesList={};\n        for (let i=0; i<unique_IDS.length; ++i) {\n          const flower_id=unique_IDS[i];\n          const category = this.props.country_info.categories_codes[flower_id.substring(2,3)]+'.png';\n          const sprite = new Flower(textures[category]);\n          sprite.x = 50;\n          sprite.y = 50;\n          sprite.anchor.x = 0.5;\n          sprite.anchor.y = 0.5;\n          const pixel_size = 10;\n          sprite.scaleValues = [1/textures[category].orig.width * pixel_size,1/textures[category].orig.height * pixel_size]\n          sprite.scale.x = sprite.scaleValues[0];\n          sprite.scale.y = sprite.scaleValues[1];\n          tempSpritesList[flower_id]=sprite;\n        }\n\n        const viewBuffer = new ViewBuffer(tempSpritesList, flowersContainer);\n        const index = available_dates.length-1\n        this.setState({day:available_dates[index], day_index:index, viewBuffer:viewBuffer});\n        viewport.on('zoomed',()=>{viewBuffer.rescaleObjects(viewport.transform.scale._x)})\n\n        prevTime = Date.now();\n        const update = function () {\n          const toSeconds=1000;\n          const deltaTime = (Date.now() - prevTime) / toSeconds;\n          prevTime = Date.now();\n          for(let i=0; i < updateQueue.length;++i)\n          {\n            updateQueue[i](deltaTime);\n          }      \n          app.renderer.render(viewport);\n          requestAnimationFrame(update);\n        }\n        update();\n      });\n    app.loader.load();\n  }\n  componentDidUpdate(prevProps, prevState){\n    if (prevState.day_index !== this.state.day_index) {\n      //update draw list\n      this.state.viewBuffer.drawRegionsInfo(this.props.regionsInfo[available_dates[this.state.day_index]]);\n      this.state.viewBuffer.clearObjects();\n      this.state.viewBuffer.setDrawList(this.props.data[available_dates[this.state.day_index]], this.state.model);\n      this.state.viewBuffer.drawObjects();\n    } else if (prevState.model !== this.state.model) {\n      //animate moveto see ViewBuffer startAnimation()\n      this.state.viewBuffer.model = this.state.model;\n      this.state.viewBuffer.startAnimation(5, app);\n    }\n    // if (this.state.model === 'stripes') {\n    //   geography.renderable = false;\n    //   viewport.snap(0, 0, {topLeft:true,interrupt:true,removeOnComplete:true,removeOnInterrupt:true});\n    //   viewport.snapZoom({width: width, interrupt:true, removeOnComplete: true, removeOnInterrupt: true});\n    // } else {\n    //   geography.renderable = true;\n    // }\n  }\n  changeDate(index){\n    if (index<0) {\n      index = available_dates.length-1\n    } else if (index>available_dates.length-1) {\n      index = 0\n    }\n    const newDate = available_dates[index];\n    this.setState({day:newDate, day_index:index});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  render() {\n    return <div style={{width:'100%',height:'100%'}} ref={this._setRef.bind(this)}>\n      <div id=\"visualization\"></div>\n      <div id=\"controls\" style={{position:'fixed', top:0}}>\n        <p>\n          <input type=\"button\" name=\"prev-date\" value=\"previous day\" onClick={ ()=>this.changeDate(this.state.day_index-1) } />\n          {this.state.day && <span>{this.state.day}</span>}\n          <input type=\"button\" name=\"prev-date\" value=\"next day\" onClick={ ()=>this.changeDate(this.state.day_index+1) } />\n          <input type=\"button\" name=\"bands\" value=\"stripes\" onClick={ ()=>this.changeModel('stripes') } />\n          <input type=\"button\" name=\"bunch\" value=\"bunches\" onClick={ ()=>this.changeModel('bunches') } />\n          <input type=\"button\" name=\"clusters\" value=\"clusters\" onClick={ ()=>this.changeModel('clusters') } />\n        </p>\n      </div>\n    </div>;\n  }\n}\n\nclass ViewBuffer{\n  /**\n   * \n   * @param {{id:Flower}} Sprites \n   * @param {PIXI.ParticleContainer} container\n   */\n  constructor(Sprites, container)\n  {\n    this.master=Sprites;\n    this.container = container;\n  }\n  master={};\n  drawList=[];\n  animationTime=0;\n  timeLeft=0;\n  app=null;\n  container=null;\n  model=null;\n  setDrawList(drawList, model){\n    this.drawList = drawList;\n    this.model = model;\n  }\n  clearObjects(){\n      this.container.removeChildren();\n  }\n  drawObjects(){\n    if(this.model === \"stripes\")\n    { \n      const margin = 20;\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]) * (width-margin*2)+margin;\n        this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]) * (height-margin*2)+margin;\n        this.container.addChild(this.master[this.drawList[i].id]);\n      }\n      return;\n    }\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      this.master[this.drawList[i].id].position.x = Number(this.drawList[i][this.model+\"_x\"]);\n      this.master[this.drawList[i].id].position.y = Number(this.drawList[i][this.model+\"_y\"]);\n      this.container.addChild(this.master[this.drawList[i].id]);\n    }\n  }\n  rescaleObjects(k){\n    for(let i=0; i < this.drawList.length; ++i)\n    {\n      const flower = this.master[this.drawList[i].id];\n      flower.scale.x = flower.scaleValues[0]/k;\n      flower.scale.y = flower.scaleValues[1]/k;\n    }\n  }\n  drawRegionsInfo(regions){\n    regionsInfo.removeChildren();\n    regions.forEach(region=>{\n      const this_graphic = new PIXI.Graphics();\n      this_graphic.lineStyle(1, 0xff0000, 0.5);\n      this_graphic.drawCircle(Number(region.x),Number(region.y),Number(region.r))\n      regionsInfo.addChild(this_graphic);\n      const text = new PIXI.Text(region.denominazione_regione+'-'+region.total,{fontFamily : 'Arial', fontSize: 10, fill : 0xff1010, align : 'left'});\n      text.x=Number(region.x);\n      text.y=Number(region.y);\n      regionsInfo.addChild(text);\n    })\n  }\n  /**\n   * \n   * @param {Number} animationTime - in seconds \n   * @param {PIXI.Application} app \n   */\n  startAnimation(animationTime, app){\n    this.animationTime = animationTime;\n    this.timeLeft = 0;\n    this.app = app;\n    if(this.model===\"stripes\")\n    { \n      const margin = 20;\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]) * (width-margin*2)+margin;\n        point.y = Number(this.drawList[i][this.model+\"_y\"]) * (height-margin*2)+margin;\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    else{\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        let point = new PIXI.Point();\n        point.x = Number(this.drawList[i][this.model+\"_x\"]);\n        point.y = Number(this.drawList[i][this.model+\"_y\"]);\n        this.master[this.drawList[i].id].setLastPoint();\n        this.master[this.drawList[i].id].setNextPoint(point);\n      }\n    }\n    updateQueue.push(this.animate.bind(this));\n  }\n  animate(delta){\n    this.timeLeft += delta;\n    if(this.timeLeft >= this.animationTime)\n    {\n      updateQueue.pop();\n    }\n    else\n    {\n      const currentTime = Utilities.easeInOutCubic(this.timeLeft / this.animationTime);\n      for(let i=0; i < this.drawList.length; ++i)\n      {\n        this.master[this.drawList[i].id].moveToNextPoint(currentTime);\n      }\n    }\n\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  originalScale=null;\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint.x;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint.y; \n  }\n}\n\nexport default Visualization;","const Utilities = {}\n\nUtilities.emoji = {\n    size: 20\n}\n\nUtilities.clampZoomOptions = {\n    minScale:0.01,\n    maxScale:7\n}\n\nUtilities.emoji_dictionary = {\n    \"dimessi_guariti\": '🍀',\n    \"isolamento_domiciliare\": '⚪️',\n    \"ricoverati_con_sintomi\": '🌼',\n    \"terapia_intensiva\": '🌸',\n    \"deceduti\": '🌺'\n};\n\nUtilities.emoji_images_dictionary = {\n    \"dimessi_guariti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/four-leaf-clover_1f340.png',\n    \"isolamento_domiciliare\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/blossom_1f33c.png',\n    \"ricoverati_con_sintomi\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/sunflower_1f33b.png',\n    \"terapia_intensiva\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/cherry-blossom_1f338.png',\n    \"deceduti\": 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/144/whatsapp/238/hibiscus_1f33a.png'\n};\n\n// categories names cant start with same 4 beginning letters so that substring(0,4) returns all different values\nUtilities.categories = [\n    \"deceduti\",\n    \"terapia_intensiva\",\n    \"ricoverati_con_sintomi\",\n    \"isolamento_domiciliare\",\n    \"dimessi_guariti\",\n]\n\nUtilities.categories_en = [\n    \"deceased\",\n    \"intensive_care\",\n    \"hospitalized\",\n    \"home_isolation\",\n    \"recovered\"\n]\n\nUtilities.category2english = {\n    \"deceduti\":\"deceased\",\n    \"terapia_intensiva\":\"intensive_care\",\n    \"ricoverati_con_sintomi\":\"hospitalized\",\n    \"isolamento_domiciliare\":\"home_isolation\",\n    \"dimessi_guariti\":\"recovered\"\n}\n\nUtilities.map = {\n    width:768,\n    height:1024,\n    scale:30000\n}\n\nUtilities.easeInOutCubic=function(t){\n    return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1;\n}\n\nexport default Utilities;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PixiViz from '../PixiViz/PixiViz';\n\nconst initialModel=\"bunches\";\n// import Utilities from '../Utilities/Utilities';\nclass VizView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      play:false,\n      unique_IDS:{}\n    }\n    this.changeDate = this.changeDate.bind(this);\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  changeDate(index){\n    if (index<0) {\n      index = this.state.dates.length-1\n    } else if (index>this.state.dates.length-1) {\n      index = 0\n    }\n    const newDate = this.state.dates[index];\n    this.setState({current_date:newDate, current_date_index:index, data_day:this.state.data[newDate]});\n  }\n  changeModel(newModel){\n    this.setState({model:newModel});\n  }\n  async componentDidMount() {\n    // init interface and things\n    // ...\n    // load data\n    const fetched = await Promise.all([\n          d3.csv('./data/list-daily-datasets.csv'),\n          d3.json('./data/regioni.geojson'),\n        ])\n        \n    const dates = fetched[0].map(d=>d.date);\n\n    let data = {};\n    const dailyDatasets = await Promise.all(fetched[0].map(d=>d3.csv('./data/'+d.file_name)))\n    for (let i=0; i<dates.length; i++) {\n      for (let ii=0; ii<dailyDatasets[i].length; ii++){\n        const elm = dailyDatasets[i][ii];\n        elm.x=Number(elm.origin_x);\n        elm.y=Number(elm.origin_y);\n        if(!(elm.id in this.state.unique_IDS))\n        {\n          this.state.unique_IDS[elm.id] = {category: elm.category, position: {x:elm[initialModel+\"_x\"], y:elm[initialModel+\"_y\"]}};\n        }\n      }\n      data[dates[i]] = dailyDatasets[i];\n    }\n    \n    let index = dates.length-1;\n    index = 0;\n    const data_day = data[dates[index]];\n\n    await this.setState({data:data, dates:dates, current_date:dates[index], current_date_index:index, data_day:data_day, model:initialModel, mapGeometries:fetched[1]});\n  }\n  render() {\n    return  <div ref={this._setRef.bind(this)}>\n              {this.state.data &&\n                <PixiViz\n                  data={this.state.data_day.reverse()}\n                  model={this.state.model}\n                  mapGeometries={this.state.mapGeometries}\n                  play={this.state.play}\n                  current_date_index={this.state.current_date_index}\n                  changeDate={this.changeDate}\n                  unique_IDS = {this.state.unique_IDS}\n                />\n              }\n              <header style={{position:'fixed',top:0}}>\n                <p>\n                  <input type=\"button\" name=\"prev-date\" value=\"⏪\" onClick={ ()=>this.changeDate(this.state.current_date_index-1) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"▶️\" onClick={ ()=>this.setState({play:!this.state.play}, this.changeDate(this.state.current_date_index+1)) } />\n                  <input type=\"button\" name=\"prev-date\" value=\"⏩\" onClick={ ()=>this.changeDate(this.state.current_date_index+1) } />\n                  <input type=\"button\" name=\"bands\" value=\"🖼\" onClick={ ()=>this.changeModel('stripes') } />\n                  <input type=\"button\" name=\"bunch\" value=\"💐\" onClick={ ()=>this.changeModel('bunches') } />\n                  <input type=\"button\" name=\"clusters\" value=\"🎯\" onClick={ ()=>this.changeModel('clusters') } />\n                  {this.state.current_date}\n                </p>\n              </header>\n            </div>;\n  }\n}\n\nexport default VizView;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as PIXI from \"pixi.js\";\nimport { Viewport } from \"pixi-viewport\";\n\n// https://github.com/gpujs/gpu.js\nimport { GPU } from 'gpu.js';\nconst gpu = new GPU();\n\nconst dpr = window.devicePixelRatio || 1;\nconst amount = 200000;\nlet test_with_gpu = false;\n\nclass PIXIPerformancesTest extends Component {\n\n  componentDidMount(){\n    const width = window.innerWidth / dpr;\n    const height = window.innerHeight / dpr;\n\n    let ticker = PIXI.Ticker.shared;\n    ticker.stop();\n\n    const app = new PIXI.Application({\n      autoStart:false,\n      width: width,\n      height: height,\n      backgroundColor: 0xf4fff1,\n      resolution: dpr,\n      powerPreference: 'high-performance',\n      sharedTicker: false\n    });\n    this._rootNode.appendChild(app.view);\n\n    const viewport = new Viewport({\n      // center: new PIXI.Point(-width/2, -height/2),\n      passiveWheel: false,\n      stopPropagation: true,\n      divWheel: this._rootNode,\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      interaction: app.renderer.plugins.interaction // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport\n      // .clampZoom(Utilities.clampZoomOptions)\n      .drag({pressDrag:true, clampWheel:true})\n      .pinch()\n      .wheel()\n    app.stage.addChild(viewport);\n\n    const container = new PIXI.ParticleContainer(amount, {\n      vertices: false,\n      position: true,\n      rotation: false,\n      uvs: false,\n      tint: false\n    });\n\n    viewport.addChild(container);\n\n    const textures = []\n    \n    app.loader.add('sprites', './flowers-textures-1.png');\n    app.loader.onProgress.add((e)=>{\n      console.log(e.progress+'%');\n    })\n    app.loader.onComplete.add(async ()=>{\n      console.log('loader completed')\n      const baseTexture = app.loader.resources.sprites.texture.baseTexture;\n\n      const flowers_textures_info = await d3.json('./flowers-textures-1.json');\n\n      for (let texture_name in flowers_textures_info.frames) {\n        const frame = flowers_textures_info.frames[texture_name].frame;\n        const texture = new PIXI.Texture(\n          baseTexture,\n          new PIXI.Rectangle(frame.x, frame.y, frame.w, frame.h)\n        );\n        textures.push(texture);\n      }\n\n      let flowers_matrix = [\n        // [x, y, speedX, speedY]\n      ];\n\n      const x_flowers = [];\n      const speed_x_flowers = [];\n\n      for (let i=0; i<amount; ++i) {\n        const index_texture = i%5;\n        const sprite = new Flower(textures[index_texture]);\n\n        const x = width*Math.random();\n        const y = height*Math.random();\n        const speedX = (-0.5 + Math.random());\n        const speedY = (-0.5 + Math.random());\n        \n        sprite.x = x;\n        sprite.y = y;\n        sprite.speedX = speedX;\n        sprite.speedY = speedY;\n\n        const flower = [x,y,speedX,speedY];\n        flowers_matrix.push(flower);\n        \n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = 0.5;\n        sprite.scale.x = 1/2/2/2;\n        sprite.scale.y = 1/2/2/2;\n  \n        container.addChild(sprite);\n      }\n\n      // console.log('flowers matrix', flowers_matrix);\n\n      const kernel = gpu.createKernel(function(arr,box) {\n        let speed_x = arr[this.thread.x][2];\n        let new_x = arr[this.thread.x][0] + speed_x;\n        if (new_x < 0) {\n          new_x = 0;\n          speed_x *= -1\n        } else if (new_x > box[0]) {\n          new_x = box[0];\n          speed_x *= -1\n        }\n        \n        let speed_y = arr[this.thread.x][3];\n        let new_y = arr[this.thread.x][1] + speed_y;\n        if (new_y < 0) {\n          new_y = 0;\n          speed_y *= -1\n        } else if (new_y > box[1]) {\n          new_y = box[1];\n          speed_y *= -1\n        }\n\n        return [new_x, new_y, speed_x, speed_y];\n      }).setOutput([amount]);\n\n      let counter = 0;\n      const update = function () {          \n        if (counter < 1000 || true) {\n          counter++;\n          if (test_with_gpu) {\n            flowers_matrix = kernel(flowers_matrix, [width, height]);\n            // console.log('kernel result',flowers_matrix[0][0]);\n          }\n          for (var i = 0; i < amount; i++) \n          {\n            var sprite = container.children[i];\n\n            if (test_with_gpu) {\n              sprite.x = flowers_matrix[i][0];\n              sprite.y = flowers_matrix[i][1];\n            } else {\n              // x\n              sprite.x += sprite.speedX;\n              if (sprite.x > width)\n              {\n                sprite.speedX *= -1;\n                sprite.x = width;\n              }\n              else if (sprite.x < 0)\n              {\n                sprite.speedX *= -1;\n                sprite.x = 0;\n              }\n              // y\n              sprite.y += sprite.speedY;\n              if (sprite.y > height)\n              {\n                sprite.speedY *= -1;\n                sprite.y = height;\n              }\n              else if (sprite.y < 0)\n              {\n                sprite.speedY *= -1;\n                sprite.y = 0;\n              }\n            }\n          }\n        };\n        \n        app.renderer.render(viewport);\n        requestAnimationFrame(update);\n      }\n      update();\n\n    })\n    app.loader.load();\n  }\n  \n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  render() {\n    return <div ref={this._setRef.bind(this)}></div>;\n  }\n}\n\nclass Flower extends PIXI.Sprite{\n  constructor(texture){\n    super(texture);\n  }\n  nextPoint=new PIXI.Point();\n  lastPoint=new PIXI.Point();\n  setNextPoint(point){\n    this.nextPoint = point;\n  }\n  setLastPoint(){\n    this.lastPoint = this.position;\n  }\n  moveToNextPoint(t){\n    this.position.x = (1-t) * this.lastPoint.x + t * this.nextPoint;\n    this.position.y = (1-t) * this.lastPoint.y + t * this.nextPoint; \n  }\n}\n\nexport default PIXIPerformancesTest;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Visualization from '../Visualization/Visualization';\n\nclass Italy extends Component {\n  constructor(props) {\n    super(props);\n    this.state={};\n  }\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n  async componentDidMount(){\n    const fetched = await Promise.all([\n      d3.csv('./data/italy/datasets.csv'),\n      d3.json('./data/world-50m.json')\n    ]);\n    const datasets=await Promise.all(fetched[0].map(d=>d3.csv('./data/italy/'+d.file_name)));\n    const datasets_regions=await Promise.all(fetched[0].map(d=>d3.csv('./data/italy/'+d.file_name.replace('.csv','-regions.csv'))));\n    const data={};\n    const regionsInfo={};\n    fetched[0].map(d=>d.date).forEach((date,i)=>{\n      data[date] = datasets[i];\n      regionsInfo[date] = datasets_regions[i];\n    })\n    const topojson = fetched[1];\n    this.setState({data:data,regionsInfo:regionsInfo,topojson:topojson});\n  }\n  render() {\n    return <div className=\"italy\" ref={this._setRef.bind(this)}>\n      {!this.state.data && <div>Loading data...</div>}\n      {this.state.data && <Visualization data={this.state.data} regionsInfo={this.state.regionsInfo} topojson={this.state.topojson} country_info={country_info}/>}\n    </div>;\n  }\n}\nexport default Italy;\n\nconst country_info = {\n  'country_code':'380',\n  'regions_codes':{\n    '13':'Abruzzo',\n    '17':'Basilicata',\n    '18':'Calabria',\n    '15':'Campania',\n    '08':'Emilia-Romagna',\n    '06':'Friuli Venezia Giulia',\n    '12':'Lazio',\n    '07':'Liguria',\n    '03':'Lombardia',\n    '11':'Marche',\n    '14':'Molise',\n    '01':'Piemonte',\n    '16':'Puglia',\n    '20':'Sardegna',\n    '19':'Sicilia',\n    '09':'Toscana',\n    '04':'Trentino-Alto Adige',\n    '10':'Umbria',\n    '02':'Valle d\\'Aosta',\n    '05':'Veneto'\n  },\n  'categories_codes':{\n    \"1\":\"deceased\",\n    \"2\":\"intensive_cares\",\n    \"3\":\"hospitalized\",\n    \"4\":\"home_isolation\",\n    \"5\":\"recovered\"\n  }\n};","import React from 'react';\nimport { HashRouter, Route, Link, useParams } from \"react-router-dom\";\nimport './App.css';\n\nimport Test from './Test';\nimport PixiViz from './PixiViz';\nimport VizView from './VizView';\nimport PIXIPerformancesTest from './PIXIPerformancesTest';\nimport Italy from './Italy';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\">\n          {\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/performances\">Testing PIXIjs performances</Link>\n                </li>\n                <li>\n                  <Link to=\"/viz\">Visualization</Link>\n                </li>\n                <li>\n                  <Link to=\"/italy\">Italy</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n        </Route>\n        <Route path=\"/svg\">\n          <Test />\n        </Route>\n        <Route path=\"/pixi\">\n          <PixiViz />\n        </Route>\n        <Route path=\"/viz\">\n          <VizView />\n        </Route>\n        <Route path=\"/performances\">\n          <PIXIPerformancesTest />\n        </Route>\n        <Route path=\"/italy\">\n          <Italy />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}